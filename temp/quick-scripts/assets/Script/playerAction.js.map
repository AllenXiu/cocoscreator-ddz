{"version":3,"sources":["playerAction.js"],"names":["pokerTypes","require","cc","Class","extends","Component","properties","buchuBtn","Button","tishiBtn","chupaiBtn","start","buchuAction","mes","playerIndex","Global","roomIndex","roomNum","Network","socket","emit","stringifyJson","node","active","chupaiAction","pokers","selectPokers","bubbleSortCards","length","console","log","type","sortByLength","pokerData","Array","card","poker","getComponent","cardId","_cardId","push","cardsType"],"mappings":";;;;;;AAAA,IAAIA,aAAaC,QAAQ,YAAR,CAAjB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,kBAAUL,GAAGM,MADL;AAERC,kBAAUP,GAAGM,MAFL;AAGRE,mBAAWR,GAAGM;AAHN,KAHP;;AASL;;AAEA;;AAEAG,SAbK,mBAaI,CAER,CAfI;AAiBLC,eAjBK,yBAiBQ;AACT,YAAIC,MAAM,EAACC,aAAYC,OAAOC,SAApB,EAA8BC,SAASF,OAAOE,OAA9C,EAAV;;AAEAC,gBAAQC,MAAR,CAAeC,IAAf,CAAoB,OAApB,EAA8BF,QAAQG,aAAR,CAAsBR,GAAtB,CAA9B;;AAEA,aAAKS,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH,KAvBI;AAwBLC,gBAxBK,0BAwBS;AACX,YAAIC,SAASV,OAAOW,YAApB;AACA1B,mBAAW2B,eAAX,CAA2BF,MAA3B;AACA,YAAIA,OAAOG,MAAP,IAAiB,CAArB,EAAwB;AACpB;AACAC,oBAAQC,GAAR,CAAY,MAAZ;AACA;AACH;AACD,YAAIC,OAAO/B,WAAWgC,YAAX,CAAwBP,MAAxB,CAAX;AACA;AACA,YAAIM,QAAQ,EAAZ,EAAgB;AACZ;AACAF,oBAAQC,GAAR,CAAY,MAAZ;AACA;AACH;AACD,YAAIG,YAAY,IAAIC,KAAJ,EAAhB;AAfW;AAAA;AAAA;;AAAA;AAgBX,iCAAmBT,MAAnB,8HAA2B;AAAA,oBAAhBU,IAAgB;;AAC1B,oBAAIC,QAAQD,KAAKE,YAAL,CAAkB,OAAlB,CAAZ;AACA,oBAAIC,SAASF,MAAMG,OAAnB;AACAN,0BAAUO,IAAV,CAAeF,MAAf;AACA;AApBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBX,YAAIzB,MAAM,EAACY,QAAOQ,SAAR,EAAkBQ,WAAUV,IAA5B,EAAiCd,SAASF,OAAOE,OAAjD,EAAyDH,aAAYC,OAAOC,SAA5E,EAAV;;AAEAE,gBAAQC,MAAR,CAAeC,IAAf,CAAoB,QAApB,EAA+BF,QAAQG,aAAR,CAAsBR,GAAtB,CAA/B;AAEF;AAlDI;;AAoDL;AApDJ","file":"playerAction.js","sourceRoot":"../../../../assets/Script","sourcesContent":["var pokerTypes = require('pokerTypes');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        buchuBtn: cc.Button, \n        tishiBtn: cc.Button, \n        chupaiBtn: cc.Button, \n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    buchuAction(){\n        let mes = {playerIndex:Global.roomIndex,roomNum: Global.roomNum};\n\n        Network.socket.emit('buchu',  Network.stringifyJson(mes));\n\n        this.node.active = false;\n    },\n    chupaiAction(){\n       let pokers = Global.selectPokers;\n       pokerTypes.bubbleSortCards(pokers);\n       if (pokers.length == 0) {\n           //牌型不符合\n           console.log(\"未选择牌\");\n           return;\n       }\n       var type = pokerTypes.sortByLength(pokers);\n       debugger\n       if (type == 14) {\n           //牌型不符合\n           console.log(\"牌型错误\");\n           return;\n       }\n       var pokerData = new Array();\n       for (const card of pokers) {\n        var poker = card.getComponent('Poker');\n        let cardId = poker._cardId;\n        pokerData.push(cardId);\n       }\n\n       let mes = {pokers:pokerData,cardsType:type,roomNum: Global.roomNum,playerIndex:Global.roomIndex};\n\n       Network.socket.emit('chupai',  Network.stringifyJson(mes));\n\n    },\n\n    // update (dt) {},\n});\n"]}