{"version":3,"sources":["pokerTypes.js"],"names":["CardType","cc","Enum","c1","c2","c20","c3","c4","c31","c32","c411","c422","c123","c1122","c111222","c11122234","c1112223344","c0","Class","extends","Component","properties","sortByLength","cards","length","checkIsDuizi","checkIsSanBuDai","grade1","getGrade","grade2","grade3","checkIsZhaDan_SanDaiYi","grade4","checkIsSanDaier_ShunZi","grade5","checkIsShunZi","chenckIsSiDaiEr","flag","myCards","i","pokerSprite","getComponent","_grade","chenckIsSiDaiErDui","size","n","prev","next","checkIsLianDui","gradeOne","gradeTwo","gradeThree","card","getCount","oneArray","TwoArray","ThreeArray","FourArray","grade","j"],"mappings":"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","file":"pokerTypes.js","sourceRoot":"../../../../assets/Script","sourcesContent":["/**\n * 牌型\n　　火箭：即双王（大王和小王），最大的牌。\n　　炸弹：四张点数相同的牌，如：7777。\n　　单牌：任意一张单牌。\n　　对牌：任意两张点数相同的牌。\n　　三张：任意三张点数相同的牌，如888。\n　　三带一：点数相同的三张牌+一张单牌或一对牌。如：333+6 或 444+99。\n　　单顺：任意五张或五张以上点数相连的牌，如：45678或78910JQK。不包括 2和双王。\n　　双顺：三对或更多的连续对牌，如：334455、7788991010JJ。不包括 2 点和双王。\n　　三顺：二个或更多的连续三张牌，如：333444 、555666777888。不包括 2 点和双王。\n　　飞机带翅膀：三顺＋同数量的单牌或同数量的对牌。如：444555+79 或333444555+7799JJ\n　　四带二：四张牌＋两手牌。（注意：四带二不是炸弹）。如：5555＋3＋8 或 4444＋55＋77 。\n */\n\nvar CardType = cc.Enum({\n    c1: 0, //单牌。  \n    c2: -1, //对子。 \n    c20: -1, //王炸。  \n    c3: -1, //3不带。  \n    c4: -1, //炸弹。  \n    c31: -1, //3带1。  \n    c32: -1, //3带2。  \n    c411: -1, //4带2个单，或者一对  \n    c422: -1, //4带2对  \n    c123: -1, //顺子。  \n    c1122: -1, //连队。  \n    c111222: -1, //飞机。  \n    c11122234: -1, //飞机带单排.  \n    c1112223344: -1, //飞机带对子.  \n    c0: -1 //不能出牌  \n});\ncc.Class({\n    extends: cc.Component,\n\n    properties: {},\n    //第一层根据数量筛选\n    sortByLength(cards) {\n        let length = cards.length;\n        switch (length) {\n            case 0:\n                return CardType.c0;\n                break;\n            case 1:\n                //单\n                return CardType.c1;\n                break;\n            case 2:\n                //进行对子的判断和王炸判断\n                return this.checkIsDuizi;\n                break;\n            case 3:\n                //3不带的判断\n                return this.checkIsSanBuDai;\n                break;\n            case 4:\n                //炸弹、3带1。 \n                break;\n            case 5:\n                //三带二、顺子\n                break;\n            case 6:\n                //顺子、四带二、飞机不带、连对\n                break;\n            case 8:\n                //顺子、四带二对、连对、飞机带单\n                break;\n            default:\n                //顺子、连对、飞机（不带、单、双）\n                /**\n                 * 顺子：每个值差1，5-11张，不含王、2\n                 * 连对：偶数，每两个差1，6-18张，不含王、2\n                 * 飞机不带：%3为0，每三张差1，6-18张\n                 * 飞机带单：%4为0，从前到后或者后到前，每三张差1，8-16张\n                 * 飞机带双：%5为0，从前到后或者后到前，每三张差1，10-15张\n                 */\n                break;\n        }\n    },\n    //进行对子的判断和王炸判断\n    checkIsDuizi(cards) {\n        var grade1 = this.getGrade(cards[0]);\n        var grade2 = this.getGrade(cards[1]);\n        //王炸\n        if (grade1 == 17 && grade2 == 16) {\n            return CardType.c20;\n        }\n        if (grade1 == grade2) {\n            return CardType.c2;\n        } else {\n            return CardType.c0;\n        }\n    },\n    //3不带的判断\n    checkIsSanBuDai(cards) {\n        var grade1 = this.getGrade(cards[0]);\n        var grade2 = this.getGrade(cards[1]);\n        var grade3 = this.getGrade(cards[2]);\n        if (grade1 == grade2 && grade1 == grade3) {\n            return CardType.c3;\n        } else {\n            return CardType.c0;\n        }\n    },\n//炸弹、3带1。 \ncheckIsZhaDan_SanDaiYi(cards){\n    \n    var grade1 = this.getGrade(cards[0]);\n    var grade2 = this.getGrade(cards[1]);\n    var grade3 = this.getGrade(cards[2]);\n    var grade4 = this.getGrade(cards[3]);\n    //炸弹\n    if (grade1==grade2 && grade1==grade3 && grade1==grade4) {\n        return CardType.c4;\n    } else {\n        if ((grade1 == grade2 && grade1 == grade3)||(grade4 == grade2 && grade4 == grade3)){\n            return CardType.c31;\n        }else{\n            //错误牌型\n            return CardType.c0;\n        }\n    }\n},\n//三带二或者顺子\ncheckIsSanDaier_ShunZi(cards){\n    var grade1 = this.getGrade(cards[0]);\n    var grade2 = this.getGrade(cards[1]);\n    var grade3 = this.getGrade(cards[2]);\n    var grade4 = this.getGrade(cards[3]);\n    var grade5 = this.getGrade(cards[4]);\n    if((grade1 == grade2 &&grade1 ==grade3 && grade4 == grade5 )||(grade1 == grade2 &&grade5 ==grade3 && grade4 == grade5) ){\n        return CardType.c32;\n    }\n    //顺子\n    if (checkIsShunZi(cards)) {\n        return CardType.c123;\n    }\n\n    return CardType.c0;\n\n},\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//四带二\nchenckIsSiDaiEr(cards){\n    var flag = false;  \n    if (myCards != null && myCards.length == 6) {  \n\n        for (var i = 0; i < 3; i++) {  \n            var grade1 = myCards[i].pokerSprite.getComponent('Poker')._grade; \n            var grade2 = myCards[i+1].pokerSprite.getComponent('Poker')._grade; \n            var grade3 = myCards[i+2].pokerSprite.getComponent('Poker')._grade; \n            var grade4 = myCards[i+3].pokerSprite.getComponent('Poker')._grade; \n\n            if (grade2 == grade1 && grade3 == grade1 && grade4 == grade1) {  \n                flag = true;  \n            }  \n        }  \n    }  \n    return flag;  \n},\n//四带二对\nchenckIsSiDaiErDui(cards){\n\n},\n//顺子判断\ncheckIsShunZi(cards){\n    // 默认是顺子  \n    var flag = true;\n\n    if (cards != null) {\n\n        var size = cards.length;\n        // 顺子牌的个数在5到12之间  \n        if (size < 5 || size > 12) {\n            return false;\n        }\n        for (var n = 0; n < size - 1; n++) {\n            var prev = this.getGrade(cards[n]);\n            var next = this.getGrade(cards[n+1]);\n            // 小王、大王、2不能加入顺子  \n            if (prev == 17 || prev == 16 || prev == 15 || next == 17 ||\n                next == 16 || next == 15) {\n                flag = false;\n                break;\n            } else {\n                if (prev - next != -1) {\n                    flag = false;\n                    break;\n                }\n\n            }\n        }\n    }\n    return flag;\n},\n    /** \n     * 判断牌是否为连对 \n     * \n     * @param cards \n     *            牌的集合 \n     * @return 如果为连对，返回true；否则，返回false。 \n     */\ncheckIsLianDui(cards){\n\n        // 默认是连对  \n        var flag = true;\n        if (cards == null) {\n            flag = false;\n            return flag;\n        }\n\n        var size = cards.length;\n        if (size < 6 || size % 2 != 0) {\n            flag = false;\n        } else {\n\n            for (var i = 0; i < size; i = i + 2) {\n                var gradeOne = this.getGrade(cards[i ]);\n                var gradeTwo = this.getGrade(cards[i + 1]);\n                if (gradeOne != gradeTwo) {\n                    flag = false;\n                    break;\n                }\n\n                if (i < size - 2) {\n                    var gradeThree = this.getGrade(cards[i + 2]);\n                    if (gradeOne - gradeThree != -1) {\n                        flag = false;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return flag;\n    },\n\n\n//获取牌的等级\ngetGrade(card){\nreturn card.pokerSprite.getComponent('Poker')._grade;\n},\n\n\n\n//牌生成一个反应数量的数组\ngetCount(cards){\n    var oneArray = [];\n    var TwoArray = [];\n    var ThreeArray = [];\n    var FourArray = [];\n    \n    for (let i = 0; i < cards.length; i++) {\n        var grade = this.getGrade(cards[i]);\n        for (let j = i-1; j < cards.length; j++) {\n\n        }\n        \n    }\n\n}\n\n\n});\n\n\n\n"]}