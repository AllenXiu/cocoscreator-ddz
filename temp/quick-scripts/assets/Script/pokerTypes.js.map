{"version":3,"sources":["pokerTypes.js"],"names":["CardType","cc","Enum","c1","c2","c20","c3","c4","c31","c32","c411","c422","c123","c1122","c111222","c11122234","c1112223344","c0","getGrade","card","getComponent","_grade","getCarAnalyseInfo","cards","oneArray","twoArray","threeArray","fourArray","jumpCount","i","length","sameCount","grade","j","grade1","push","allInfo","console","log","sortByLength","cardsInfo","checkIsWangzha","checkIsShunzi","checkIsLianDuizi","checkIsFeiJi","grade2","flag","checkElementIsContain","count","element","array","module","exports"],"mappings":"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","file":"pokerTypes.js","sourceRoot":"../../../../assets/Script","sourcesContent":["/**\n * 牌型\n　　火箭：即双王（大王和小王），最大的牌。\n　　炸弹：四张点数相同的牌，如：7777。\n　　单牌：任意一张单牌。\n　　对牌：任意两张点数相同的牌。\n　　三张：任意三张点数相同的牌，如888。\n　　三带一：点数相同的三张牌+一张单牌或一对牌。如：333+6 或 444+99。\n　　单顺：任意五张或五张以上点数相连的牌，如：45678或78910JQK。不包括 2和双王。\n　　双顺：三对或更多的连续对牌，如：334455、7788991010JJ。不包括 2 点和双王。\n　　三顺：二个或更多的连续三张牌，如：333444 、555666777888。不包括 2 点和双王。\n　　飞机带翅膀：三顺＋同数量的单牌或同数量的对牌。如：444555+79 或333444555+7799JJ\n　　四带二：四张牌＋两手牌。（注意：四带二不是炸弹）。如：5555＋3＋8 或 4444＋55＋77 。\n */\n\nvar CardType = cc.Enum({\n    c1: 0, //单牌。  \n    c2: -1, //对子。 \n    c20: -1, //王炸。  \n    c3: -1, //3不带。  \n    c4: -1, //炸弹。  \n    c31: -1, //3带1。  \n    c32: -1, //3带2。  \n    c411: -1, //4带2个单，或者一对  \n    c422: -1, //4带2对  \n    c123: -1, //顺子。  \n    c1122: -1, //连队。  \n    c111222: -1, //飞机。  \n    c11122234: -1, //飞机带单排.  \n    c1112223344: -1, //飞机带对子.  \n    c0: -1 //不能出牌  \n});\n\n\n//获取牌的等级\nfunction getGrade(card) {\n    debugger\n    return card.getComponent('Poker')._grade;\n};\n\n//牌生成一个反应数量的数组\nfunction getCarAnalyseInfo(cards) {\ndebugger\n    var oneArray = [];\n    var twoArray = [];\n    var threeArray = [];\n    var fourArray = [];\n    //循环跳过的数量=相同牌的数量\n    var jumpCount = 1;\n    for (let i = 0; i < cards.length; i += jumpCount) {\n        var sameCount = 1;\n        var grade = getGrade(cards[i]);\n\n        for (let j = i + 1; j < cards.length; j++) {\n            var grade1 = getGrade(cards[j]);\n            if (grade != grade1) {\n                break;\n            }\n            sameCount++;\n        }\n        jumpCount = sameCount;\n\n        switch (sameCount) {\n            case 1:\n\n                oneArray.push(grade);\n\n                break;\n            case 2:\n\n                twoArray.push(grade);\n\n                break;\n            case 3:\n\n                threeArray.push(grade);\n\n                break;\n            case 4:\n\n                fourArray.push(grade);\n\n                break;\n            default:\n                break;\n        }\n    };\n    var allInfo = [oneArray, twoArray, threeArray, fourArray];\n    console.log(allInfo)\n    return allInfo;\n}\n//根据长度筛选先\nfunction sortByLength(cards) {\n    let length = cards.length;\n    var cardsInfo = getCarAnalyseInfo(cards);\ndebugger\n    switch (length) {\n        case 0:\n            return CardType.c0;\n            break;\n        case 1:\n            //单\n            return CardType.c1;\n            break;\n        case 2:\n            //进行对子的判断和王炸判断\n            if (checkIsWangzha(cards)) {\n                return CardType.c20;\n            } else if (cardsInfo[1].length == 1) {\n                return CardType.c2;\n            }\n            break;\n        case 3:\n            //3不带的判断\n            if (cardsInfo[2].length == 1) {\n                return CardType.c3;\n            }\n            break;\n        case 4:\n            //炸弹、3带1。\n            if (cardsInfo[2].length == 1) {\n                return CardType.c31;\n            } else if (cardsInfo[3].length == 0) {\n                return CardType.c4;\n            }\n            break;\n        case 5:\n            //三带二、顺子\n            //炸弹、3带1。\n            if (cardsInfo[2].length == 1) {\n                return CardType.c31;\n            } else if (cardsInfo[3].length == 0) {\n                return CardType.c4;\n            } else if (checkIsShunzi(cardsInfo, length)) {\n                return CardType.c123;\n            }\n            break;\n        case 6:\n            //顺子、四带二、飞机不带、连对\n            if (cardsInfo[3].length == 1) {\n                return CardType.c411;\n            } else if (cardsInfo[2].length == 2) {\n                return CardType.c111222;\n            } else if (checkIsShunzi(cardsInfo, length)) {\n                return CardType.c123;\n            } else if (checkIsLianDuizi(cardsInfo, length)) {\n                return CardType.c1122;\n            }\n            break;\n        case 8:\n            //顺子、四带二对、连对、飞机带单\n            if (cardsInfo[3].length == 1 && cardsInfo[1].length == 2) {\n                return CardType.c422;\n            } else if (cardsInfo[2].length == 2) {\n                return CardType.c11122234;\n            } else if (checkIsShunzi(cardsInfo, length)) {\n                return CardType.c123;\n            } else if (checkIsLianDuizi(cardsInfo, length)) {\n                return CardType.c1122;\n            }\n            break;\n        default:\n            //顺子、连对、飞机（不带、单、双）\n            /**\n             * 顺子：每个值差1，5-11张，不含王、2\n             * 连对：偶数，每两个差1，6-18张，不含王、2\n             * 飞机不带：%3为0，每三张差1，6-18张\n             * 飞机带单：%4为0，从前到后或者后到前，每三张差1，8-16张\n             * 飞机带双：%5为0，从前到后或者后到前，每三张差1，10-15张\n             */\n            if (checkIsShunzi(cardsInfo, length)) {\n                return CardType.c123;\n            } else if (checkIsLianDuizi(cardsInfo, length)) {\n                return CardType.c1122;\n            } else if (checkIsFeiJi(cardsInfo, length, 3)) {\n                //飞机不带\n                return CardType.c111222;\n            } else if (checkIsFeiJi(cardsInfo, length, 4)) {\n                //飞机带单\n                return CardType.c11122234;\n            } else if (checkIsFeiJi(cardsInfo, length, 5)) {\n                //飞机带对子\n                return CardType.c1112223344;\n            }\n            break;\n    }\n    return CardType.c0;\n}\n\n//进行对子的判断和王炸判断\nfunction checkIsWangzha(cards) {\n    var grade1 = getGrade(cards[0]);\n    var grade2 = getGrade(cards[1]);\n    //王炸\n    if (grade1 == 17 && grade2 == 16) {\n        return true;\n    }\n    return false;\n}\n//顺子的判断\nfunction checkIsShunzi(cardsInfo, length) {\n    var flag = false;\n    if (cardsInfo[0].length != length) {\n        //单排数组长度为所有扑克牌\n    } else if (checkElementIsContain(17, cardsInfo[0]) || checkElementIsContain(16, cardsInfo[0]) || checkElementIsContain(15, cardsInfo[0])) {\n        //不可以包含王、2\n    } else if (cardsInfo[0][length - 1] - cardsInfo[0][0] == length - 1) {\n        //（第一张牌值  - 最后一张牌值）== (length-1)\n        flag = true;\n    }\n\n    return flag;\n}\n//连对子判断\nfunction checkIsLianDuizi(cardsInfo, length) {\n    var flag = false;\n    if ((cardsInfo[1].length != length / 2) || (0 != length % 2)) {\n        //对子数组长度为所有扑克牌/2 length为2的整除\n    } else if (checkElementIsContain(17, cardsInfo[1]) || checkElementIsContain(16, cardsInfo[1]) || checkElementIsContain(15, cardsInfo[1])) {\n        //不可以包含王、2\n    } else if (cardsInfo[1][length - 1] - cardsInfo[1][0] == length / 2 - 1) {\n        //（第一张牌值  - 最后一张牌值）== (length/2-1)\n        flag = true;\n    }\n\n    return flag;\n}\n\nfunction checkIsFeiJi(cardsInfo, length, count) {\n    var flag = false;\n    if ((cardsInfo[2].length != length / count) || (0 != length % 3)) {\n        //对子数组长度为所有扑克牌/2 length为2的整除\n    } else if (checkElementIsContain(15, cardsInfo[count])) {\n        //不可以包含、2\n    } else if (cardsInfo[2][length - 1] - cardsInfo[2][0] == length / count - 1) {\n        //（第一张牌值  - 最后一张牌值）== (length/3-1)\n        flag = true;\n    }\n    return flag;\n}\n\n//检查数组是否包含元素\nfunction checkElementIsContain(element, array) {\n\n    for (const grade of array) {\n        if (grade == element) {\n            return true;\n        }\n    }\n    return false;\n};\nmodule.exports = {\n    CardType: CardType,\n    sortByLength: sortByLength\n}"]}