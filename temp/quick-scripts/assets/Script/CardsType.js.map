{"version":3,"sources":["CardsType.js"],"names":["Poker","require","cc","Class","extends","Component","properties","start","isDan","myCards","flag","length","isDuiZi","grade1","pokerSprite","getComponent","_grade","grade2","isSanDaiYi","size","CardUtil","sortCards","grades","Array","isSanBuDai","grade0","isShunZi","n","prev","next","isZhaDan","isDuiWang","gradeOne","gradeTwo","isLianDui","i","gradeThree","isFeiJi","isFeiJiBuDai","isFeiJiDai","slice","System","out","println","grade3","cards","j","push","isSiDaiEr","grade4"],"mappings":"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","file":"CardsType.js","sourceRoot":"../../../../assets/Script","sourcesContent":["//牌型判断\n/**\n * 牌型\n　　火箭：即双王（大王和小王），最大的牌。\n　　炸弹：四张点数相同的牌，如：7777。\n　　单牌：任意一张单牌。\n　　对牌：任意两张点数相同的牌。\n　　三张：任意三张点数相同的牌，如888。\n　　三带一：点数相同的三张牌+一张单牌或一对牌。如：333+6 或 444+99。\n　　单顺：任意五张或五张以上点数相连的牌，如：45678或78910JQK。不包括 2和双王。\n　　双顺：三对或更多的连续对牌，如：334455、7788991010JJ。不包括 2 点和双王。\n　　三顺：二个或更多的连续三张牌，如：333444 、555666777888。不包括 2 点和双王。\n　　飞机带翅膀：三顺＋同数量的单牌或同数量的对牌。如：444555+79 或333444555+7799JJ\n　　四带二：四张牌＋两手牌。（注意：四带二不是炸弹）。如：5555＋3＋8 或 4444＋55＋77 。\n */\n\nvar Poker = require('Poker');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n    start() {\n\n    },\n\n    /** \n     * 判断牌是否为单 \n     * \n     * @param myCards \n     *            牌的集合 \n     * @return 如果为单，返回true；否则，返回false。 \n     */\n    isDan(myCards) {\n        // 默认不是单  \n        var flag = false;\n        if (myCards != null && myCards.length == 1) {\n            flag = true;\n        }\n        return flag;\n    },\n    /** \n     * 判断牌是否为对子 \n     * \n     * @param myCards \n     *            牌的集合 \n     * @return 如果为对子，返回true；否则，返回false。 \n     */\n    isDuiZi(myCards) {\n        // 默认不是对子  \n        var flag = false;\n\n        if (myCards != null && myCards.length == 2) {\n            var grade1 = myCards[0].pokerSprite.getComponent('Poker')._grade;\n            var grade1 = myCards[1].pokerSprite.getComponent('Poker')._grade;\n            if (grade1 == grade2) {\n                flag = true;\n            }\n        }\n\n        return flag;\n\n    },\n    /*\n     * 判断牌是否为3带1  \n     *  \n     * @param myCards  \n     *            牌的集合  \n     * @return 如果为3带1，被带牌的位置，0或3，否则返回-1。炸弹返回-1。  \n     */\n    isSanDaiYi(myCards) {\n        var flag = -1;\n        // 默认不是3带1  \n        if (myCards != null && myCards.size() == 4) {\n            // 对牌进行排序  \n            CardUtil.sortCards(myCards);\n\n            var grades = new Array[4];\n            grades[0] = myCards[0].pokerSprite.getComponent('Poker')._grade;\n            grades[1] = myCards[1].pokerSprite.getComponent('Poker')._grade;\n            grades[2] = myCards[2].pokerSprite.getComponent('Poker')._grade;\n            grades[3] = myCards[4].pokerSprite.getComponent('Poker')._grade;\n\n            // 暂时认为炸弹不为3带1  \n            if ((grades[1] == grades[0]) && (grades[2] == grades[0]) &&\n                (grades[3] == grades[0])) {\n                return -1;\n            }\n            // 3带1，被带的牌在牌头  \n            else if ((grades[1] == grades[0] && grades[2] == grades[0])) {\n                return 0;\n            }\n            // 3带1，被带的牌在牌尾  \n            else if (grades[1] == grades[3] && grades[2] == grades[3]) {\n                return 3;\n            }\n        }\n        return flag;\n    },\n    /** \n     * 判断牌是否为3不带 \n     * \n     * @param myCards \n     *            牌的集合 \n     * @return 如果为3不带，返回true；否则，返回false。 \n     */\n    isSanBuDai(myCards) {\n        // 默认不是3不带  \n        var flag = false;\n\n        if (myCards != null && myCards.length == 3) {\n            var grade0 = myCards[0].pokerSprite.getComponent('Poker')._grade;\n            var grade1 = myCards[1].pokerSprite.getComponent('Poker')._grade;\n            var grade2 = myCards[2].pokerSprite.getComponent('Poker')._grade;\n\n            if (grade0 == grade1 && grade2 == grade0) {\n                flag = true;\n            }\n        }\n        return flag;\n    },\n\n    /** \n     * 判断牌是否为顺子 \n     * \n     * @param myCards \n     *            牌的集合 \n     * @return 如果为顺子，返回true；否则，返回false。 \n     */\n    isShunZi(myCards) {\n        // 默认是顺子  \n        var flag = true;\n\n        if (myCards != null) {\n\n            var size = myCards.length;\n            // 顺子牌的个数在5到12之间  \n            if (size < 5 || size > 12) {\n                return false;\n            }\n\n\n            for (var n = 0; n < size - 1; n++) {\n                var prev = myCards[n].pokerSprite.getComponent('Poker')._grade;\n                var next = myCards[n + 1].pokerSprite.getComponent('Poker')._grade;\n                // 小王、大王、2不能加入顺子  \n                if (prev == 17 || prev == 16 || prev == 15 || next == 17 ||\n                    next == 16 || next == 15) {\n                    flag = false;\n                    break;\n                } else {\n                    if (prev - next != -1) {\n                        flag = false;\n                        break;\n                    }\n\n                }\n            }\n        }\n\n        return flag;\n    },\n    /** \n     * 判断牌是否为炸弹 \n     * \n     * @param myCards \n     *            牌的集合 \n     * @return 如果为炸弹，返回true；否则，返回false。 \n     */\n    isZhaDan(myCards) {\n        // 默认不是炸弹  \n        var flag = false;\n        if (myCards != null && myCards.length == 4) {\n\n            var grades = new Array[4];\n            grades[0] = myCards[0].pokerSprite.getComponent('Poker')._grade;\n            grades[1] = myCards[1].pokerSprite.getComponent('Poker')._grade;\n            grades[2] = myCards[2].pokerSprite.getComponent('Poker')._grade;\n            grades[3] = myCards[3].pokerSprite.getComponent('Poker')._grade;\n            if ((grades[1] == grades[0]) && (grades[2] == grades[0]) &&\n                (grades[3] == grades[0])) {\n                flag = true;\n            }\n        }\n        return flag;\n    },\n\n    /** \n     * 判断牌是否为王炸 \n     * \n     * @param myCards \n     *            牌的集合 \n     * @return 如果为王炸，返回true；否则，返回false。 \n     */\n    isDuiWang(myCards) {\n        // 默认不是对王  \n        var flag = false;\n\n        if (myCards != null && myCards.length == 2) {\n\n            var gradeOne = myCards[0].pokerSprite.getComponent('Poker')._grade;\n            var gradeTwo = myCards[1].pokerSprite.getComponent('Poker')._grade;\n\n            // 只有小王和大王的等级之后才可能是33  \n            if (gradeOne + gradeTwo == 33) {\n                flag = true;\n            }\n        }\n        return flag;\n    },\n    /** \n     * 判断牌是否为连对 \n     * \n     * @param myCards \n     *            牌的集合 \n     * @return 如果为连对，返回true；否则，返回false。 \n     */\n    isLianDui(myCards) {\n        // 默认是连对  \n        var flag = true;\n        if (myCards == null) {\n            flag = false;\n            return flag;\n        }\n\n        var size = myCards.length;\n        if (size < 6 || size % 2 != 0) {\n            flag = false;\n        } else {\n            // 对牌进行排序  \n            CardUtil.sortCards(myCards);\n            for (var i = 0; i < size; i = i + 2) {\n                var gradeOne = myCards[i].pokerSprite.getComponent('Poker')._grade;\n                var gradeTwo = myCards[i + 1].pokerSprite.getComponent('Poker')._grade;\n                if (gradeOne != gradeTwo) {\n                    flag = false;\n                    break;\n                }\n\n                if (i < size - 2) {\n                    var gradeThree = myCards[i + 2].pokerSprite.getComponent('Poker')._grade;\n                    if (gradeOne - gradeThree != -1) {\n                        flag = false;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return flag;\n    },\n\n\n/** \n  * 判断牌是否为飞机 \n  * \n  * @param myCards \n  *            牌的集合 \n  * @return 如果为飞机，返回true；否则，返回false。 \n  */  \nisFeiJi( myCards) {  \n    var flag = false;  \n    // 默认不是单  \n    if (myCards != null) {  \n \n        var size = myCards.length;  \n        if (size >= 6) {  \n            // 对牌进行排序  \n \n            if (size % 3 == 0 && size % 4 != 0) {  \n                flag = this.isFeiJiBuDai(myCards);  \n            } else if (size % 3 != 0 && size % 4 == 0) {  \n                flag = this.isFeiJiDai(myCards);  \n            } else if (size == 12) {  \n                flag = this.isFeiJiBuDai(myCards) || this.isFeiJiDai(myCards);  \n            }  \n        }  \n    }  \n    return flag;  \n},\n\n/** \n  * 判断牌是否为飞机不带 \n  * \n  * @param myCards \n  *            牌的集合 \n  * @return 如果为飞机不带，返回true；否则，返回false。 \n  */  \nisFeiJiBuDai( myCards) {  \n    if (myCards == null) {  \n        return false;  \n    }  \n \n    var size = myCards.length;  \n    var n = size / 3;  \n \nvar grades = new Array[n];  \n \n    if (size % 3 != 0) {  \n        return false;  \n    } else {  \n        for (var i = 0; i < n; i++) {  \n            if (!isSanBuDai(myCards.slice(i * 3, i * 3 + 3))) {  \n                return false;  \n            } else {  \n                // 如果连续的3张牌是一样的，记录其中一张牌的grade  \n                grades[i] = myCards[i * 3].pokerSprite.getComponent('Poker')._grade;  \n            }  \n        }  \n    }  \n \n    for (var i = 0; i < n - 1; i++) {  \n        if (grades[i] == 15) {// 不允许出现2  \n            return false;  \n        }  \n \n        if (grades[i + 1] - grades[i] != 1) {  \n            System.out.println(\"等级连续,如 333444\"  \n                    + (grades[i + 1] - grades[i]));  \n            return false;// grade必须连续,如 333444  \n        }  \n    }  \n \n    return true;  \n} ,\n/** \n    * 判断牌是否为飞机带 \n    * \n    * @param myCards \n    *            牌的集合 \n    * @return 如果为飞机带，返回true；否则，返回false。 \n    */  \nisFeiJiDai( myCards) {  \n    var size = myCards.length;  \n    var n = size / 4;// 此处为“除”，而非取模  \n    var i = 0;  \n    for (i = 0; i + 2 < size; i = i + 3) {  \n        var grade1 = myCards[i].pokerSprite.getComponent('Poker')._grade; \n        var grade2 = myCards[i + 1].pokerSprite.getComponent('Poker')._grade;  \n        var grade3 = myCards[i + 2].pokerSprite.getComponent('Poker')._grade; \n        if (grade1 == grade2 && grade3 == grade1) {  \n\n            // return isFeiJiBuDai(myCards.subList(i, i + 3 *  \n            // n));8张牌时，下标越界,subList不能取到最后一个元素  \n            var  cards = [];  \n            for (var j = i; j < i + 3 * n; j++) {// 取字串  \n                cards.push(myCards[j]);\n            }  \n            return isFeiJiBuDai(cards);  \n        }  \n\n    }  \n\n    return false;  \n} ,\n/** \n   * 判断牌是否为4带2 \n   * \n   * @param myCards \n   *            牌的集合 \n   * @return 如果为4带2，返回true；否则，返回false。 \n   */  \nisSiDaiEr(myCards) {  \n    var flag = false;  \n    if (myCards != null && myCards.length == 6) {  \n\n        for (var i = 0; i < 3; i++) {  \n            var grade1 = myCards[i].pokerSprite.getComponent('Poker')._grade; \n            var grade2 = myCards[i+1].pokerSprite.getComponent('Poker')._grade; \n            var grade3 = myCards[i+2].pokerSprite.getComponent('Poker')._grade; \n            var grade4 = myCards[i+3].pokerSprite.getComponent('Poker')._grade; \n\n            if (grade2 == grade1 && grade3 == grade1 && grade4 == grade1) {  \n                flag = true;  \n            }  \n        }  \n    }  \n    return flag;  \n}\n});"]}