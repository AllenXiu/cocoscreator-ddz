{"version":3,"sources":["../../../../assets/Script/assets/Script/pokerTypes.js"],"names":["CardType","cc","Enum","c1","c2","c20","c3","c4","c31","c32","c411","c422","c123","c1122","c111222","c11122234","c1112223344","c0","Class","extends","Component","properties","getGrade","card","getComponent","_grade","getCarAnalyseInfo","cards","oneArray","twoArray","threeArray","fourArray","jumpCount","i","length","sameCount","grade","j","grade1","push","allInfo","console","log","sortByLength","cardsInfo","checkIsWangzha","checkIsShunzi","checkIsLianDuizi","checkIsFeiJi","grade2","falg","checkElementIsContain","flag","count","element","array"],"mappings":"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","file":"pokerTypes.js","sourceRoot":"../../../../assets/Script","sourcesContent":["/**\n * 牌型\n　　火箭：即双王（大王和小王），最大的牌。\n　　炸弹：四张点数相同的牌，如：7777。\n　　单牌：任意一张单牌。\n　　对牌：任意两张点数相同的牌。\n　　三张：任意三张点数相同的牌，如888。\n　　三带一：点数相同的三张牌+一张单牌或一对牌。如：333+6 或 444+99。\n　　单顺：任意五张或五张以上点数相连的牌，如：45678或78910JQK。不包括 2和双王。\n　　双顺：三对或更多的连续对牌，如：334455、7788991010JJ。不包括 2 点和双王。\n　　三顺：二个或更多的连续三张牌，如：333444 、555666777888。不包括 2 点和双王。\n　　飞机带翅膀：三顺＋同数量的单牌或同数量的对牌。如：444555+79 或333444555+7799JJ\n　　四带二：四张牌＋两手牌。（注意：四带二不是炸弹）。如：5555＋3＋8 或 4444＋55＋77 。\n */\n\nvar CardType = cc.Enum({\n    c1: 0, //单牌。  \n    c2: -1, //对子。 \n    c20: -1, //王炸。  \n    c3: -1, //3不带。  \n    c4: -1, //炸弹。  \n    c31: -1, //3带1。  \n    c32: -1, //3带2。  \n    c411: -1, //4带2个单，或者一对  \n    c422: -1, //4带2对  \n    c123: -1, //顺子。  \n    c1122: -1, //连队。  \n    c111222: -1, //飞机。  \n    c11122234: -1, //飞机带单排.  \n    c1112223344: -1, //飞机带对子.  \n    c0: -1 //不能出牌  \n});\ncc.Class({\n    extends: cc.Component,\n\n    properties: {},\n\n    //获取牌的等级\n    getGrade(card) {\n        return card.getComponent('Poker')._grade;\n    },\n\n    //牌生成一个反应数量的数组\n    getCarAnalyseInfo(cards) {\n\n        var oneArray = [];\n        var twoArray = [];\n        var threeArray = [];\n        var fourArray = [];\n        //循环跳过的数量=相同牌的数量\n        var jumpCount = 1;\n        for (let i = 0; i < cards.length; i += jumpCount) {\n            var sameCount = 1;\n            var grade = this.getGrade(cards[i]);\n\n            for (let j = i + 1; j < cards.length; j++) {\n                var grade1 = this.getGrade(cards[j]);\n                if (grade != grade1) {\n                    break;\n                }\n                sameCount++;\n            }\n            jumpCount = sameCount;\n\n            switch (sameCount) {\n                case 1:\n\n                    oneArray.push(grade);\n\n                    break;\n                case 2:\n\n                    twoArray.push(grade);\n\n                    break;\n                case 3:\n\n                    threeArray.push(grade);\n\n                    break;\n                case 4:\n\n                    fourArray.push(grade);\n\n                    break;\n                default:\n                    break;\n            }\n        };\n        var allInfo = [oneArray, twoArray, threeArray, fourArray];\n        console.log(allInfo)\n    },\n    //根据长度筛选先\n    sortByLength(cards) {\n        let length = cards.length;\n        var cardsInfo = this.getCarAnalyseInfo(cards);\n\n        switch (length) {\n            case 1:\n                //单\n                return CardType.c0;\n                break;\n            case 1:\n                //单\n                return CardType.c1;\n                break;\n            case 2:\n                //进行对子的判断和王炸判断\n                if (this.checkIsWangzha(cards)) {\n                    return CardType.c20;\n                } else if (cards[1].length == 1) {\n                    return CardType.c2;\n                }\n                break;\n            case 3:\n                //3不带的判断\n            if (cardsInfo[2].length == 1) {\n                return CardType.c3;\n            }\n                break;\n            case 4:\n                //炸弹、3带1。\n                if (cardsInfo[2].length == 1) {\n                    return CardType.c31;\n                }else if (cardsInfo[3].length == 0) {\n                    return CardType.c4;\n                }\n                break;\n            case 5:\n                //三带二、顺子\n                //炸弹、3带1。\n                if (cardsInfo[2].length == 1) {\n                    return CardType.c31;\n                }else if (cardsInfo[3].length == 0) {\n                    return CardType.c4;\n                }else if (this.checkIsShunzi(cardsInfo,length)){\n                    return CardType.c123;\n                }\n                break;\n            case 6:\n                //顺子、四带二、飞机不带、连对\n                if (cardsInfo[3].length == 1) {\n                    return CardType.c411;\n                }else if (cardsInfo[2].length == 2) {\n                    return CardType.c111222;\n                }else if (this.checkIsShunzi(cardsInfo,length)){\n                    return CardType.c123;\n                }else if (this.checkIsLianDuizi(cardsInfo,length)){\n                    return CardType.c1122;\n                }\n                break;\n            case 8:\n                //顺子、四带二对、连对、飞机带单\n                if (cardsInfo[3].length == 1 &&cardsInfo[1].length == 2) {\n                    return CardType.c422;\n                }else if (cardsInfo[2].length == 2) {\n                    return CardType.c11122234;\n                }else if (this.checkIsShunzi(cardsInfo,length)){\n                    return CardType.c123;\n                }else if (this.checkIsLianDuizi(cardsInfo,length)){\n                    return CardType.c1122;\n                }\n                break;\n            default:\n                //顺子、连对、飞机（不带、单、双）\n                /**\n                 * 顺子：每个值差1，5-11张，不含王、2\n                 * 连对：偶数，每两个差1，6-18张，不含王、2\n                 * 飞机不带：%3为0，每三张差1，6-18张\n                 * 飞机带单：%4为0，从前到后或者后到前，每三张差1，8-16张\n                 * 飞机带双：%5为0，从前到后或者后到前，每三张差1，10-15张\n                 */\n                if (this.checkIsShunzi(cardsInfo,length)){\n                    return CardType.c123;\n                }else if (this.checkIsLianDuizi(cardsInfo,length)){\n                    return CardType.c1122;\n                }else if (checkIsFeiJi(cardsInfo,length,3)) {\n                    //飞机不带\n                    return CardType.c111222;\n                }else if(checkIsFeiJi(cardsInfo,length,4)){\n                    //飞机带单\n                    return CardType.c11122234;\n                }else if(checkIsFeiJi(cardsInfo,length,5)){\n                    //飞机带对子\n                    return CardType.c1112223344;\n                }\n                break;\n        }\n        return CardType.c0;\n    },\n    //进行对子的判断和王炸判断\n    checkIsWangzha(cards) {\n        var grade1 = this.getGrade(cards[0]);\n        var grade2 = this.getGrade(cards[1]);\n        //王炸\n        if (grade1 == 17 && grade2 == 16) {\n            return true;\n        }\n        return false;\n    },\n    //顺子的判断\n    checkIsShunzi(cardsInfo,length){\n        var falg = false;\n        if (cardsInfo[0].length != length) {\n            //单排数组长度为所有扑克牌\n        }else if( checkElementIsContain(17,cardsInfo[0])||checkElementIsContain(16,cardsInfo[0])||checkElementIsContain(15,cardsInfo[0])){\n            //不可以包含王、2\n        }else if(cardsInfo[0][length-1] - cardsInfo[0][0] == length-1){\n            //（第一张牌值  - 最后一张牌值）== (length-1)\n            flag = true;\n        }\n\n        return flag;\n    },\n    //连对子判断\n    checkIsLianDuizi(cardsInfo,length){\n        var falg = false;\n        if ((cardsInfo[1].length != length/2) || (0 != length % 2)) {\n            //对子数组长度为所有扑克牌/2 length为2的整除\n        }else if( checkElementIsContain(17,cardsInfo[1])||checkElementIsContain(16,cardsInfo[1])||checkElementIsContain(15,cardsInfo[1])){\n            //不可以包含王、2\n        }else if(cardsInfo[1][length-1] - cardsInfo[1][0] == length/2 -1){\n            //（第一张牌值  - 最后一张牌值）== (length/2-1)\n            flag = true;\n        }\n\n        return flag;\n    },\n    \n    checkIsFeiJi(cardsInfo,length,count){\n        var falg = false;\n        if ((cardsInfo[2].length != length/count) || (0 != length % 3)) {\n            //对子数组长度为所有扑克牌/2 length为2的整除\n        }else if(checkElementIsContain(15,cardsInfo[count])){\n            //不可以包含、2\n        }else if(cardsInfo[2][length-1] - cardsInfo[2][0] == length/count -1){\n            //（第一张牌值  - 最后一张牌值）== (length/3-1)\n            flag = true;\n        }\n        return flag;\n    },\n\n                //检查数组是否包含元素\n                checkElementIsContain(element, array) {\n                \n                    for (const grade of array) {\n                        if (grade == element) {\n                            return true;\n                        }\n                    }\n                    return false;\n                },\n    \n\n});"]}