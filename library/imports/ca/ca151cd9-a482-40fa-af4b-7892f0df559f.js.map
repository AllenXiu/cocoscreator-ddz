{"version":3,"sources":["../../../../assets/Script/assets/Script/pokerTypes.js"],"names":["PokerObj","require","CardType","cc","Enum","c1","c2","c20","c3","c4","c31","c32","c411","c422","c123","c1122","c111222","c11122234","c1112223344","c0","getGrade","card","getComponent","_grade","getCarAnalyseInfo","cards","oneArray","twoArray","threeArray","fourArray","jumpCount","i","length","sameCount","grade","j","grade1","push","allInfo","console","log","sortByLength","cardsInfo","checkIsWangzha","checkIsShunzi","checkIsLianDuizi","checkIsFeiJi","grade2","flag","checkElementIsContain","count","secondSortWithCards","type","pokerSpriteOne","pokerGrade","tempArray","concat","splice","comparePokers","lastPoker","thisPoker","Global","lastPokers","selectPokers","bubbleSortCards","lastCardsInfo","thisCardsInfo","index","element","array","size","PokerOne","pokerSpriteTwo","PokerTwo","gradeOne","gradeTwo","isExchange","type1","_bigType","type2","CardBigType","HEI_TAO","HONG_TAO","MEI_HUA","FANG_KUAI","module","exports"],"mappings":"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","file":"pokerTypes.js","sourceRoot":"../../../../assets/Script","sourcesContent":["/**\n * 牌型\n　　火箭：即双王（大王和小王），最大的牌。\n　　炸弹：四张点数相同的牌，如：7777。\n　　单牌：任意一张单牌。\n　　对牌：任意两张点数相同的牌。\n　　三张：任意三张点数相同的牌，如888。\n　　三带一：点数相同的三张牌+一张单牌或一对牌。如：333+6 或 444+99。\n　　单顺：任意五张或五张以上点数相连的牌，如：45678或78910JQK。不包括 2和双王。\n　　双顺：三对或更多的连续对牌，如：334455、7788991010JJ。不包括 2 点和双王。\n　　三顺：二个或更多的连续三张牌，如：333444 、555666777888。不包括 2 点和双王。\n　　飞机带翅膀：三顺＋同数量的单牌或同数量的对牌。如：444555+79 或333444555+7799JJ\n　　四带二：四张牌＋两手牌。（注意：四带二不是炸弹）。如：5555＋3＋8 或 4444＋55＋77 。\n */\nvar PokerObj = require(\"Poker\");\n\nvar CardType = cc.Enum({\n    c1: 0, //单牌。  \n    c2: -1, //对子。 \n    c20: -1, //王炸。  \n    c3: -1, //3不带。  \n    c4: -1, //炸弹。  \n    c31: -1, //3带1。  \n    c32: -1, //3带2。  \n    c411: -1, //4带2个单，或者一对  \n    c422: -1, //4带2对  \n    c123: -1, //顺子。  \n    c1122: -1, //连队。  \n    c111222: -1, //飞机。  \n    c11122234: -1, //飞机带单排.  \n    c1112223344: -1, //飞机带对子.  \n    c0: -1 //不能出牌  \n});\n\n\n//获取牌的等级\nfunction getGrade(card) {\n    return card.getComponent('Poker')._grade;\n};\n\n//牌生成一个反应数量的数组\nfunction getCarAnalyseInfo(cards) {\n\n    var oneArray = [];\n    var twoArray = [];\n    var threeArray = [];\n    var fourArray = [];\n    //循环跳过的数量=相同牌的数量\n    var jumpCount = 1;\n    for (let i = 0; i < cards.length; i += jumpCount) {\n        var sameCount = 1;\n        var grade = getGrade(cards[i]);\n\n        for (let j = i + 1; j < cards.length; j++) {\n            var grade1 = getGrade(cards[j]);\n            if (grade != grade1) {\n                break;\n            }\n            sameCount++;\n        }\n        jumpCount = sameCount;\n\n        switch (sameCount) {\n            case 1:\n\n                oneArray.push(grade);\n\n                break;\n            case 2:\n\n                twoArray.push(grade);\n\n                break;\n            case 3:\n\n                threeArray.push(grade);\n\n                break;\n            case 4:\n\n                fourArray.push(grade);\n\n                break;\n            default:\n                break;\n        }\n    };\n    var allInfo = [oneArray, twoArray, threeArray, fourArray];\n    console.log(allInfo)\n    return allInfo;\n}\n//根据长度筛选先\nfunction sortByLength(cards) {\n    let length = cards.length;\n    var cardsInfo = getCarAnalyseInfo(cards);\n    switch (length) {\n        case 0:\n            return CardType.c0;\n            break;\n        case 1:\n            //单\n            return CardType.c1;\n            break;\n        case 2:\n            //进行对子的判断和王炸判断\n            if (checkIsWangzha(cards)) {\n                return CardType.c20;\n            } else if (cardsInfo[1].length == 1) {\n                return CardType.c2;\n            }\n            break;\n        case 3:\n            //3不带的判断\n            if (cardsInfo[2].length == 1) {\n                return CardType.c3;\n            }\n            break;\n        case 4:\n            //炸弹、3带1。\n            if (cardsInfo[2].length == 1) {\n                return CardType.c31;\n            } else if (cardsInfo[3].length == 1) {\n                return CardType.c4;\n            }\n            break;\n        case 5:\n            //三带二、顺子\n            //炸弹\n            if (cardsInfo[2].length == 1 && cardsInfo[1].length == 1){\n                return CardType.c32;\n            } else if (cardsInfo[3].length == 1) {\n                return CardType.c4;\n            } else if (checkIsShunzi(cardsInfo, length)) {\n                return CardType.c123;\n            }\n            break;\n        case 6:\n            //顺子、四带二、飞机不带、连对\n            if (cardsInfo[3].length == 1) {\n                return CardType.c411;\n            } else if (cardsInfo[2].length == 2) {\n                return CardType.c111222;\n            } else if (checkIsShunzi(cardsInfo, length)) {\n                return CardType.c123;\n            } else if (checkIsLianDuizi(cardsInfo, length)) {\n                return CardType.c1122;\n            }\n            break;\n        case 8:\n            //顺子、四带二对、连对、飞机带单\n            if (cardsInfo[3].length == 1 && cardsInfo[1].length == 2) {\n                return CardType.c422;\n            } else if (cardsInfo[2].length == 2) {\n                return CardType.c11122234;\n            } else if (checkIsShunzi(cardsInfo, length)) {\n                return CardType.c123;\n            } else if (checkIsLianDuizi(cardsInfo, length)) {\n                return CardType.c1122;\n            }\n            break;\n        default:\n            //顺子、连对、飞机（不带、单、双）\n            /**\n             * 顺子：每个值差1，5-11张，不含王、2\n             * 连对：偶数，每两个差1，6-18张，不含王、2\n             * 飞机不带：%3为0，每三张差1，6-18张\n             * 飞机带单：%4为0，从前到后或者后到前，每三张差1，8-16张\n             * 飞机带双：%5为0，从前到后或者后到前，每三张差1，10-15张\n             */\n            if (checkIsShunzi(cardsInfo, length)) {\n                return CardType.c123;\n            } else if (checkIsLianDuizi(cardsInfo, length)) {\n                return CardType.c1122;\n            } else if (checkIsFeiJi(cardsInfo, length, 3)) {\n                //飞机不带\n                return CardType.c111222;\n            } else if (checkIsFeiJi(cardsInfo, length, 4)) {\n                //飞机带单\n                return CardType.c11122234;\n            } else if (checkIsFeiJi(cardsInfo, length, 5)) {\n                //飞机带对子\n                return CardType.c1112223344;\n            }\n            break;\n    }\n    return CardType.c0;\n}\n\n//进行对子的判断和王炸判断\nfunction checkIsWangzha(cards) {\n    var grade1 = getGrade(cards[0]);\n    var grade2 = getGrade(cards[1]);\n    //王炸\n    if (grade1 == 17 && grade2 == 16) {\n        return true;\n    }\n    return false;\n}\n//顺子的判断\nfunction checkIsShunzi(cardsInfo, length) {\n    var flag = false;\n    if (cardsInfo[0].length != length) {\n        //单排数组长度为所有扑克牌\n    } else if (checkElementIsContain(17, cardsInfo[0]) || checkElementIsContain(16, cardsInfo[0]) || checkElementIsContain(15, cardsInfo[0])) {\n        //不可以包含王、2\n    } else if (cardsInfo[0][0] - cardsInfo[0][cardsInfo[0].length - 1] == length - 1) {\n        //（第一张牌值  - 最后一张牌值）== (length-1)\n        flag = true;\n    }\n\n    return flag;\n}\n//连对子判断\nfunction checkIsLianDuizi(cardsInfo, length) {\n    var flag = false;\n    if ((cardsInfo[1].length != length / 2) || (0 != length % 2)) {\n        //对子数组长度为所有扑克牌/2 length为2的整除\n    } else if (checkElementIsContain(17, cardsInfo[1]) || checkElementIsContain(16, cardsInfo[1]) || checkElementIsContain(15, cardsInfo[1])) {\n        //不可以包含王、2\n    } else if ( cardsInfo[1][0] - cardsInfo[1][cardsInfo[1].length - 1]  == length / 2 - 1) {\n        //（第一张牌值  - 最后一张牌值）== (length/2-1)\n        flag = true;\n    }\n\n    return flag;\n}\n\nfunction checkIsFeiJi(cardsInfo, length, count) {\n    var flag = false;\n    if ((cardsInfo[2].length != length / count) || (0 != length % count)) {\n        //对子数组长度为所有扑克牌/2 length为2的整除\n    } else if (checkElementIsContain(15, cardsInfo[2])) {\n        //不可以包含、2\n    } else if (cardsInfo[2][0] - cardsInfo[2][cardsInfo[2].length - 1]  == length / count - 1) {\n        //（第一张牌值  - 最后一张牌值）== (length/3-1)\n        flag = true;\n    }\n    return flag;\n}\n//二次排序（针对四带和三代）\nfunction secondSortWithCards(cards){\n    let type = sortByLength(cards);\n    var cardsInfo = getCarAnalyseInfo(cards);\n\n    if (type == CardType.c31 ||type == CardType.c32 ||type == CardType.c11122234 ||type == CardType.c1112223344) {\n        //将cardsInfo[2]中有的全部提前\n        //反向遍历\n        for (let i = cardsInfo[2].length -1 ; i >=0 ; i--) {\n\n            let grade = cardsInfo[2][i];\n            for (let j = 0 ;  j <cards.length ; j++) {\n                const pokerSpriteOne = cards[j];\n                let pokerGrade = pokerSpriteOne.getComponent('Poker')._grade;\n                //找到相等等级的提前\n                if (grade == pokerGrade) {\n                    let tempArray = [cards[j+2],cards[j+1],cards[j]];\n                    //合并两个数组\n                    cards = tempArray.concat(cards);\n\n                    //删除原始的三个数据\n                    cards.splice(j+3,3);\n\n                    break;\n                }\n            }\n        }\n    }else if (type == CardType.c411 ||type == CardType.c422) {\n        //将cardsInfo[3]中有的全部提前\n            //反向遍历\n            let grade = cardsInfo[3][0];\n            for (let j = 0 ; j <cards.length; j++) {\n                const pokerSpriteOne = cards[j];\n                let pokerGrade = pokerSpriteOne.getComponent('Poker')._grade;\n                //找到相等等级的提前\n                if (grade == pokerGrade) {\n                    let tempArray = [cards[j],cards[j+1],cards[j+2],cards[j+3]];\n                    //合并两个数组\n                    cards = tempArray.concat(cards);\n                    //删除原始的三个数据\n                    cards.splice(j+4,4);\n                    break;\n                }\n            }\n    }else{\n        return cards;\n    }\n    return cards;\n}\n\n\n/**\n * 比较两次打的牌，后一次要大于前一次\n * @param {上一手牌} lastPoker \n * @param {本次} thisPoker \n */\nfunction comparePokers(lastPoker, thisPoker) {\n    //首先判断是否为炸弹和王炸\n    if (lastPoker == CardType.c20) {//上一手为王炸\n        return false;\n    } else if (thisPoker == CardType.c20) {//当前为王炸\n        return true;\n    } else if (thisPoker == CardType.c4 && lastPoker != CardType.c4) {//当前为炸弹,上一手不为炸弹\n        return true;\n    }\n    //长度不同则直接返回错误\n    if (Global.lastPokers.length != Global.selectPokers.length) {\n        return false;\n    }\n    //大小判断\n    if (lastPoker == thisPoker) {\n        //通用方法，从大到小(先排序一次)\n        bubbleSortCards(Global.lastPokers);\n        bubbleSortCards(Global.selectPokers);\n        let lastCardsInfo = getCarAnalyseInfo(Global.lastPokers);\n        let thisCardsInfo = getCarAnalyseInfo(Global.selectPokers);\n        let index = 0;\n        if (lastPoker == CardType.c1 || lastPoker == CardType.c123) {\n            index = 0;\n        } else if (lastPoker == CardType.c2) {\n            index = 1;\n        } else if (lastPoker == CardType.c3 || lastPoker == CardType.c31 || lastPoker == CardType.c32 || lastPoker == CardType.c11122234 || lastPoker == CardType.c1112223344) {\n            index = 2;\n        } else if (lastPoker == CardType.c4 || lastPoker == CardType.c411 || lastPoker == CardType.c422) {\n            index = 3\n        }\n        for (let i = 0; i < lastCardsInfo[index].length; i++) {\n            if (lastCardsInfo[index][i] >= thisCardsInfo[index][i]) {\n                //出现一个小于则失败\n                return false;\n            }\n        }\n        return true;\n    }\n\n    return false;\n\n\n}\n\n//检查数组是否包含元素\nfunction checkElementIsContain(element, array) {\n\n    for (const grade of array) {\n        if (grade == element) {\n            return true;\n        }\n    }\n    return false;\n};\n/** \n     * 对牌进行排序，从小到大，使用冒泡排序，此种方法不是很好 \n     * \n     * @param cards \n     *            牌 \n     */\n    function bubbleSortCards(cards) {\n        if (cards == null) {\n            return cards;\n        }\n        let size = cards.length;\n        // 冒泡排序,从左到右，从小到大  \n        for (var i = 0; i < size; i++) {\n            for (var j = 0; j < size - 1 - i; j++) {\n                let pokerSpriteOne = cards[j];\n                let PokerOne = pokerSpriteOne.getComponent('Poker');\n                let pokerSpriteTwo = cards[j + 1];\n                let PokerTwo = pokerSpriteTwo.getComponent('Poker');\n\n                var gradeOne = PokerOne._grade;\n                var gradeTwo = PokerTwo._grade;\n\n                var isExchange = false;\n                if (gradeOne < gradeTwo) {\n                    isExchange = true;\n                } else if (gradeOne == gradeTwo) {\n                    // 2张牌的grade相同  \n                    var type1 = PokerOne._bigType;\n                    var type2 = PokerTwo._bigType;\n\n                    // 从左到右，方块、梅花、红桃、黑桃  \n                    if (type1 == PokerObj.CardBigType.HEI_TAO) {\n                        isExchange = true;\n                    } else if (type1 == PokerObj.CardBigType.HONG_TAO) {\n                        if (type2 == PokerObj.CardBigType.MEI_HUA ||\n                            type2 == PokerObj.CardBigType.FANG_KUAI) {\n                            isExchange = true;\n                        }\n                    } else if (type1 == PokerObj.CardBigType.MEI_HUA) {\n                        if (type2 == PokerObj.CardBigType.FANG_KUAI) {\n                            isExchange = true;\n                        }\n                    }\n                }\n                if (isExchange) {\n                    cards[j + 1] = pokerSpriteOne;\n                    cards[j] = pokerSpriteTwo;\n                }\n            }\n        }\n        // console.log(\"我的牌\"+ cards);\n        // return cards;\n    };\nmodule.exports = {\n    CardType: CardType,\n    sortByLength: sortByLength,\n    bubbleSortCards: bubbleSortCards,\n    secondSortWithCards: secondSortWithCards,\n    comparePokers:comparePokers\n\n}"]}