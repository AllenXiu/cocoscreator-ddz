{"version":3,"sources":["../../../../assets/Script/assets/Script/Poker.js"],"names":["CardBigType","cc","Enum","HEI_TAO","HONG_TAO","MEI_HUA","FANG_KUAI","XIAO_WANG","DA_WANG","CardSmallType","A","ER","SAN","SI","WU","LIU","QI","BA","JIU","SHI","J","Q","K","Class","extends","Component","properties","_cardId","_bigType","default","type","_smallType","_grade","_imageName","creatCard","id","getBigType","getSmallType","getGrade","getImageName","bigType","RuntimeException","smallType","numToType","num","grade","modResult","imageName","mod","firstLetter","secondLetter","extension","showPoke","isBack","backUrl","url","raw","texture","textureCache","addImage","getComponent","Sprite","spriteFrame","setTexture","onLoad","start","module","exports"],"mappings":"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","file":"Poker.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// 一张牌的大类型 \nvar CardBigType = cc.Enum({\n    HEI_TAO: 0,\n    HONG_TAO: -1,\n    MEI_HUA: -1,\n    FANG_KUAI: -1,\n    XIAO_WANG: -1,\n    DA_WANG: -1\n});\n// 一张牌的小类型 \nvar CardSmallType = cc.Enum({\n    A: 0,\n    ER: -1,\n    SAN: -1,\n    SI: -1,\n    WU: -1,\n    LIU: -1,\n    QI: -1,\n    BA: -1,\n    JIU: -1,\n    SHI: -1,\n    J: -1,\n    Q: -1,\n    K: -1,\n    XIAO_WANG: -1,\n    DA_WANG: -1\n});\ncc.Class({\n    extends: cc.Component,\n    \n    properties: {\n        // 牌的数字ID,1到54  \n        _cardId: 0,\n\n        // 牌的大类型，方块，梅花,红桃,黑桃,小王,大王  \n        _bigType: {\n            default :null,\n            type:CardBigType\n        },\n\n        // 牌的小类型，2_10,A,J,Q,K  \n        _smallType:  {\n            default :null,\n            type:CardSmallType\n        },\n\n        // 牌的等级，对牌进行排序时会用到  \n        _grade : 0,\n\n        // 牌的图像名字，图形界面显示牌用到  \n        _imageName: \"\"\n\n    },\n    creatCard(id) {\n        this._cardId = id;\n        this._bigType = this.getBigType(id);\n        this._smallType = this.getSmallType(id);\n        this._grade = this.getGrade(id);\n        this._imageName = this.getImageName(id);\n        // Icon icon = DdzUtil.getImageIcon(imageName);  \n        // setIcon(icon);  \n        return this;\n    },\n    /** \n     * 根据牌的id获得一张牌的大类型：方块，梅花,红桃,黑桃,小王,大王 \n     * \n     * @param id \n     *            牌的id \n     * \n     * @return 牌的大类型：方块，梅花,红桃,黑桃,小王,大王 \n     */\n    getBigType(id) {\n        var bigType = null;\n        if (id >= 1 && id <= 13) {\n            bigType = CardBigType.FANG_KUAI;\n        } else if (id >= 14 && id <= 26) {\n            bigType = CardBigType.MEI_HUA;\n        } else if (id >= 27 && id <= 39) {\n            bigType = CardBigType.HONG_TAO;\n        } else if (id >= 40 && id <= 52) {\n            bigType = CardBigType.HEI_TAO;\n        } else if (id == 53) {\n            bigType = CardBigType.XIAO_WANG;\n        } else if (id == 54) {\n            bigType = CardBigType.DA_WANG;\n        }\n        return bigType;\n    },\n\n    /** \n     * 根据牌的id，获取牌的小类型：2_10,A,J,Q,K \n     * \n     * @param id \n     *            牌的id \n     * \n     * @return 牌的小类型：2_10,A,J,Q,K \n     */\n    getSmallType(id) {\n        if (id < 1 || id > 54) {\n            throw new RuntimeException(\"牌的数字不合法\");\n        }\n\n        var smallType = null;\n\n        if (id >= 1 && id <= 52) {\n            smallType = this.numToType(id % 13);\n        } else if (id == 53) {\n            smallType = CardSmallType.XIAO_WANG;\n        } else if (id == 54) {\n            smallType = CardSmallType.DA_WANG;\n        } else {\n            smallType = null;\n        }\n        return smallType;\n    },\n\n    /** \n     * 将阿拉伯数字0到12转换成对应的小牌型,被getSmallType方法调用 \n     * \n     * @param num \n     *            数字（0到12） \n     * @return 牌的小类型 \n     */\n    numToType(num) {\n        var type = null;\n        switch (num) {\n            case 0:\n                type = CardSmallType.K;\n                break;\n            case 1:\n                type = CardSmallType.A;\n                break;\n            case 2:\n                type = CardSmallType.ER;\n                break;\n            case 3:\n                type = CardSmallType.SAN;\n                break;\n            case 4:\n                type = CardSmallType.SI;\n                break;\n            case 5:\n                type = CardSmallType.WU;\n                break;\n            case 6:\n                type = CardSmallType.LIU;\n                break;\n            case 7:\n                type = CardSmallType.QI;\n                break;\n            case 8:\n                type = CardSmallType.BA;\n                break;\n            case 9:\n                type = CardSmallType.JIU;\n                break;\n            case 10:\n                type = CardSmallType.SHI;\n                break;\n            case 11:\n                type = CardSmallType.J;\n                break;\n            case 12:\n                type = CardSmallType.Q;\n                break;\n\n        }\n        return type;\n    },\n    /** \n     * 根据牌的id，获得一张牌的等级 \n     * \n     * @param id \n     *            牌的id \n     * @return 与牌数字对应的等级 \n     */\n    getGrade(id) {\n\n        if (id < 1 || id > 54) {\n            throw new RuntimeException(\"牌的数字不合法\");\n        }\n\n        var grade = 0;\n\n        // 2个王必须放在前边判断  \n        if (id == 53) {\n            grade = 16;\n        } else if (id == 54) {\n            grade = 17;\n        } else {\n            var modResult = id % 13;\n\n            if (modResult == 1) {\n                grade = 14;\n            } else if (modResult == 2) {\n                grade = 15;\n            } else if (modResult == 3) {\n                grade = 3;\n            } else if (modResult == 4) {\n                grade = 4;\n            } else if (modResult == 5) {\n                grade = 5;\n            } else if (modResult == 6) {\n                grade = 6;\n            } else if (modResult == 7) {\n                grade = 7;\n            } else if (modResult == 8) {\n                grade = 8;\n            } else if (modResult == 9) {\n                grade = 9;\n            } else if (modResult == 10) {\n                grade = 10;\n            } else if (modResult == 11) {\n                grade = 11;\n            } else if (modResult == 12) {\n                grade = 12;\n            } else if (modResult == 0) {\n                grade = 13;\n            }\n\n        }\n\n        return grade;\n    },\n\n    /** \n     * 根据牌的id获得牌图片的名字 \n     * \n     * @param id \n     *            牌的id \n     * @return 图片的名字 \n     */\n    getImageName(id) {\n        // 得到图片的前一个字符，表示是第几个牌  \n        var imageName = \"\";\n\n        if (id == 53) {\n            imageName += \"xiaowang_0\";\n        } else if (id == 54) {\n            imageName += \"dawang_0\";\n        } else {\n            var mod = id % 13;\n            var firstLetter = \"\";\n            switch (mod) {\n                case 0:\n                    firstLetter = \"13\";\n                    break;\n                default:\n                    firstLetter = \"\" + mod;\n                    break;\n            }\n            //方块，梅花,红桃,黑桃,小王,大王 \n            var secondLetter = \"\";\n            // 得到图片的后一个字符，表示什么颜色的牌  \n            if (id >= 1 && id <= 13) {\n                secondLetter = \"fangzhuan_\";\n            } else if (id >= 14 && id <= 26) {\n                secondLetter = \"meihua_\";\n            } else if (id >= 27 && id <= 39) {\n                secondLetter = \"hongxin_\";\n            } else if (id >= 40 && id <= 52) {\n                secondLetter = \"heitao_\";\n            }\n\n            imageName = secondLetter + firstLetter;\n        }\n        // var extension = \".png\";\n        var extension = \"\";\n\n        return imageName + extension;\n    },\n\n    //显示图片\n    showPoke(isBack){\n        if (isBack) {\n            var backUrl = cc.url.raw('resources/PokerBack.png');\n            var texture = cc.textureCache.addImage(backUrl);\n            this.getComponent(cc.Sprite).spriteFrame.setTexture(texture);\n        } else {\n            \n        }\n    },\n\n    onLoad() {\n        // console.log(\"启动\");\n        // var card =  this.creatCard(15);\n        // console.log(card._imageName);\n\n    },\n\n    start() {\n\n    },\n\n    // update (dt) {},\n});\n\nmodule.exports = {\n    CardBigType: CardBigType,\n    CardSmallType: CardSmallType,\n};"]}