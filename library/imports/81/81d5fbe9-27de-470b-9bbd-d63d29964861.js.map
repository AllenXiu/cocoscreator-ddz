{"version":3,"sources":["../../../../assets/Script/assets/Script/playing.js"],"names":["cc","Class","extends","Component","properties","poker","Prefab","pokerSpriteFrameMap","default","visible","allPokers","leftPokers","RightPokers","playerPokers","onLoad","loadRes","self","loader","SpriteAtlas","err","assets","console","log","sflist","getSpriteFrames","i","length","sf","_name","startPoker","loadAllPoker","shuffleArray","array","j","Math","random","temp","startUp","startDown","startPlayer","startx","pokerSprite","Poker","getComponent","pokerName","gap","scale","node","addChild","x","setPosition","instantiate","creatCard","_imageName","Sprite","spriteFrame","start"],"mappings":"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","file":"playing.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        poker: cc.Prefab, //扑克\n        pokerSpriteFrameMap: {\n            default: {},\n            visible: false,\n        },\n        allPokers: [], //所有牌\n        leftPokers: [], //左边牌\n        RightPokers: [], //右边牌\n        playerPokers: [], //玩家牌\n        leftPokers: [], //左边打出牌\n        RightPokers: [], //右边打出牌\n        playerPokers: [], //玩家打出牌\n\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        this.loadRes();\n    },\n\n    //加载卡片资源\n    loadRes() {\n\n        let self = this;\n        cc.loader.loadRes('poker', cc.SpriteAtlas, function (err, assets) {\n            console.log('====' + assets);\n\n            let sflist = assets.getSpriteFrames();\n            for (let i = 0; i < sflist.length; i++) {\n                let sf = sflist[i];\n                self.pokerSpriteFrameMap[sf._name] = sf;\n            }\n            console.log(\"获取完全部Poker\")\n        });\n\n    },\n    //测试获取Poker\n    startPoker() {\n        this.loadAllPoker();\n\n    },\n    //洗牌算法\n    shuffleArray(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            // 在正数的时候相当于Math.floor()向下取整,负数的时候相当于Math.ceil()：\n            var j = (Math.random() * (i + 1)) | 0;\n            // console.log(j);\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    },\n    //生成上家\n    startUp() {\n\n    },\n    //生成上家\n    startDown() {\n\n    },\n    //生成当前玩家\n    startPlayer() {\n        let startx = 16 / 2; //开始x坐标\n        for (let i = 0; i < 16; i++) {\n\n            let pokerSprite = this.allPokers[i];\n            var Poker = pokerSprite.getComponent('Poker');\n            console.log(\"名称\" + Poker.pokerName);\n\n            let gap = 20; //牌间隙\n            pokerSprite.scale = 1;\n\n            this.node.addChild(pokerSprite);\n            let x = (-startx) * gap + i * gap;\n            // console.log(x);\n            pokerSprite.setPosition(x, 0);\n        }\n    },\n    loadAllPoker() {\n        for (let i = 0; i < 54; i++) {\n\n            let pokerSprite = cc.instantiate(this.poker);\n            var Poker = pokerSprite.getComponent('Poker');\n            var pokerName = Poker.creatCard(i + 1)._imageName;\n            // console.log(\"名称\" + pokerName);\n            pokerSprite.getComponent(cc.Sprite).spriteFrame = this.pokerSpriteFrameMap[pokerName];\n\n            this.allPokers[i] = pokerSprite;\n        }\n        //排序\n        this.allPokers = this.shuffleArray(this.allPokers);\n\n        this.startPlayer();\n    },\n\n    start() {\n\n    },\n\n    // update (dt) {},\n});"]}