{"version":3,"sources":["../../../../assets/Script/assets/Script/playing.js"],"names":["PokerObj","require","PlayerType","cc","Enum","left","right","player","dipai","shoupai","Class","extends","Component","properties","poker","Prefab","allPokers","leftPokers","rightPokers","playerPokers","dipaiPokers","leftPokersOut","rightPokersOut","playerPokersOut","pokerSpriteFrameMap","default","visible","leftReady","Label","rightReady","playerReady","maskBackground","Node","startBtn","Button","leftCount","leftbuchu","leftShowPoker","rightCount","rightShowPoker","rightbuchu","playerHandCards","playerOutCards","playerAction","playerDizhuAction","dipaiShowPoker","onLoad","socketAction","loadRes","setIndex","Network","socket","initNetwork","self","console","log","Global","roomNum","on","roomIndex","leftIndex","string","rightIndex","loader","SpriteAtlas","err","assets","sflist","getSpriteFrames","i","length","sf","_name","startPoker","emit","cards","active","loadAllPoker","refreshCount","showCards","shuffleArray","array","j","Math","random","temp","startUp","pokerSprite","bubbleSortCards","startDown","startPlayer","startDipai","type","showPoker","getComponent","showPokers","originCards","instantiate","Poker","pokerName","creatCard","_imageName","Sprite","spriteFrame","size","pokerSpriteOne","PokerOne","pokerSpriteTwo","PokerTwo","gradeOne","_grade","gradeTwo","isExchange","type1","_bigType","type2","CardBigType","HEI_TAO","HONG_TAO","MEI_HUA","FANG_KUAI","start"],"mappings":"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","file":"playing.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\nvar PokerObj = require(\"Poker\");\n\nvar PlayerType = cc.Enum({\n    left: 0,\n    right: -1,\n    player: -1,\n    dipai: -1,\n    shoupai: -1\n})\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        poker: cc.Prefab, //扑克\n        allPokers: [], //所有牌\n        leftPokers: [], //左边牌\n        rightPokers: [], //右边牌\n        playerPokers: [], //玩家牌\n        dipaiPokers: [], //底牌\n        leftPokersOut: [], //左边打出牌\n        rightPokersOut: [], //右边打出牌\n        playerPokersOut: [], //玩家打出牌\n        pokerSpriteFrameMap: {\n            default: {},\n            visible: false,\n        },\n        leftReady: cc.Label, //左边准备\n        rightReady: cc.Label, //右边准备\n        playerReady: cc.Label, //玩家准备\n        //控制的东西\n        maskBackground: cc.Node, //开始前的遮罩\n        startBtn: cc.Button, //开始按钮\n        leftCount: cc.Label, //左边数量\n        leftbuchu: cc.Label, //左边不出\n        leftShowPoker: cc.Node, //左边展示Poker\n        rightCount: cc.Label, //右边数量\n        rightShowPoker: cc.Node, //右边展示Poker\n        rightbuchu: cc.Label, //右边不出\n\n        playerHandCards: cc.Node, //玩家手牌\n        playerOutCards: cc.Node, //玩家出牌\n        playerAction: cc.Node, //玩家按钮\n        playerDizhuAction: cc.Node, //玩家按钮\n\n        dipaiShowPoker: cc.Node, //右边展示Poker\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        \n        this.socketAction();\n        this.loadRes();\n        this.setIndex();\n    },\n    /**\n     * socket处理\n     */\n    socketAction() {\n        if (Network.socket == null) {\n            //启动网络\n            Network.initNetwork();\n        }\n        let self = this;\n        // Network.socket.on('hello', function (msg) {\n        //     console.log(msg);\n        // });\n        console.log(Global.roomNum)\n        //准备开始\n        \n        Network.socket.on(\"readyGame\"+Global.roomNum, function (roomIndex) {\n            if (roomIndex == self.leftIndex) {\n                self.leftReady.string = \"准备\";\n            } else if (roomIndex == self.rightIndex) {\n                self.rightReady.string = \"准备\";\n            } else {\n\n            }\n        });\n        \n\n    },\n    //加载卡片资源\n    loadRes() {\n\n        let self = this;\n        cc.loader.loadRes('poker', cc.SpriteAtlas, function (err, assets) {\n            console.log('====' + assets);\n\n            let sflist = assets.getSpriteFrames();\n            for (let i = 0; i < sflist.length; i++) {\n                let sf = sflist[i];\n                self.pokerSpriteFrameMap[sf._name] = sf;\n            }\n            console.log(\"获取完全部Poker\")\n        });\n\n    },\n    //测试获取Poker\n    startPoker() {\n        this.playerReady.string = \"已准备\"\n        Network.socket.emit('readyGame',  Global.roomNum,Global.roomIndex);\n        var self = this;\n        //获取所有Poker\n        Network.socket.on('startGame' + Global.roomNum, function (cards) {\n            //隐藏控件\n            self.maskBackground.active = false;\n\n            self.leftbuchu.string = \"\";\n            \n            self.rightbuchu.string = \"\";\n            \n            self.playerAction.active = false;\n            \n            self.playerDizhuAction.active = false;\n\n            self.loadAllPoker(cards);\n            self.refreshCount();\n            self.showCards(PlayerType.player);\n        });\n    },\n    //洗牌算法\n    shuffleArray(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            // 在正数的时候相当于Math.floor()向下取整,负数的时候相当于Math.ceil()：\n            var j = (Math.random() * (i + 1)) | 0;\n            // console.log(j);\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    },\n    //生成上家\n    startUp() {\n\n        for (let i = 0; i < 16; i++) {\n            let pokerSprite = this.allPokers[i + this.leftIndex * 16];\n            this.leftPokers[i] = pokerSprite;\n        }\n        this.bubbleSortCards(this.leftPokers);\n        // this.showPokers(this.leftPokers, PlayerType.left);\n\n    },\n    //生成下家\n    startDown() {\n\n        for (let i = 0; i < 16; i++) {\n            let pokerSprite = this.allPokers[i + this.rightIndex * 16 + 3];\n            this.rightPokers[i] = pokerSprite;\n        }\n        this.bubbleSortCards(this.rightPokers);\n        // this.showPokers(this.rightPokers, PlayerType.right);\n\n    },\n    //生成当前玩家\n    startPlayer() {\n        for (let i = 0; i < 16; i++) {\n            let pokerSprite = this.allPokers[i + Global.roomIndex * 16 + 3];\n            this.playerPokers[i] = pokerSprite;\n        }\n        this.bubbleSortCards(this.playerPokers);\n        // this.showPokers(this.playerPokers, PlayerType.player);\n\n\n    },\n    //生成三张底牌\n    startDipai() {\n        for (let i = 0; i < 3; i++) {\n            let pokerSprite = this.allPokers[i];\n            this.dipaiPokers[i] = pokerSprite;\n        }\n        this.bubbleSortCards(this.dipaiPokers);\n        // this.showPokers(this.dipaiPokers, PlayerType.dipai);\n    },\n    showCards(type) {\n        if (type == PlayerType.left) {\n            var showPoker = this.leftShowPoker.getComponent('ShowPoker');\n            showPoker.showPokers(this.leftPokers, PlayerType.left);\n        } else if (type == PlayerType.right) {\n            var showPoker = this.rightShowPoker.getComponent('ShowPoker');\n            showPoker.showPokers(this.rightPokers, PlayerType.right);\n        } else if (type == PlayerType.player) {\n            var showPoker = this.playerHandCards.getComponent('ShowPoker');\n            showPoker.showPokers(this.playerPokers, PlayerType.player);\n        } else if (type == PlayerType.shoupai) {\n            var showPoker = this.playerOutCards.getComponent('ShowPoker');\n            showPoker.showPokers(cards, PlayerType.shoupai);\n        } else {\n            var showPoker = this.dipaiShowPoker.getComponent('ShowPoker');\n            showPoker.showPokers(this.dipaiPokers, PlayerType.dipai);\n        }\n    },\n\n    loadAllPoker(originCards) {\n        for (let i = 0; i < originCards.length; i++) {\n\n            let pokerSprite = cc.instantiate(this.poker);\n            var Poker = pokerSprite.getComponent('Poker');\n            var pokerName = Poker.creatCard(originCards[i])._imageName;\n            // console.log(\"名称\" + pokerName);\n            pokerSprite.getComponent(cc.Sprite).spriteFrame = this.pokerSpriteFrameMap[pokerName];\n\n            this.allPokers[i] = pokerSprite;\n        }\n        //洗牌\n        this.allPokers = this.shuffleArray(this.allPokers);\n        //发牌\n        this.startDipai();\n        this.startUp();\n        this.startPlayer();\n        this.startDown();\n\n    },\n    /** \n     * 对牌进行排序，从小到大，使用冒泡排序，此种方法不是很好 \n     * \n     * @param cards \n     *            牌 \n     */\n    bubbleSortCards(cards) {\n        if (cards == null) {\n            return cards;\n        }\n        let size = cards.length;\n        // 冒泡排序,从左到右，从小到大  \n        for (var i = 0; i < size; i++) {\n            for (var j = 0; j < size - 1 - i; j++) {\n                let pokerSpriteOne = cards[j];\n                let PokerOne = pokerSpriteOne.getComponent('Poker');\n                let pokerSpriteTwo = cards[j + 1];\n                let PokerTwo = pokerSpriteTwo.getComponent('Poker');\n\n                var gradeOne = PokerOne._grade;\n                var gradeTwo = PokerTwo._grade;\n\n                var isExchange = false;\n                if (gradeOne < gradeTwo) {\n                    isExchange = true;\n                } else if (gradeOne == gradeTwo) {\n                    // 2张牌的grade相同  \n                    var type1 = PokerOne._bigType;\n                    var type2 = PokerTwo._bigType;\n\n                    // 从左到右，方块、梅花、红桃、黑桃  \n                    if (type1 == PokerObj.CardBigType.HEI_TAO) {\n                        isExchange = true;\n                    } else if (type1 == PokerObj.CardBigType.HONG_TAO) {\n                        if (type2 == PokerObj.CardBigType.MEI_HUA ||\n                            type2 == PokerObj.CardBigType.FANG_KUAI) {\n                            isExchange = true;\n                        }\n                    } else if (type1 == PokerObj.CardBigType.MEI_HUA) {\n                        if (type2 == PokerObj.CardBigType.FANG_KUAI) {\n                            isExchange = true;\n                        }\n                    }\n                }\n                if (isExchange) {\n                    cards[j + 1] = pokerSpriteOne;\n                    cards[j] = pokerSpriteTwo;\n                }\n            }\n        }\n        // console.log(\"我的牌\"+ cards);\n        return cards;\n    },\n    //刷新显示数量\n    refreshCount() {\n        this.leftCount.string = \"\" + this.leftPokers.length;\n        this.rightCount.string = \"\" + this.rightPokers.length;\n    },\n    //设置Index\n    setIndex() {\n        if (Global.roomIndex == 0) {\n            this.leftIndex = 2;\n            this.rightIndex = 1;\n        } else if (Global.roomIndex == 1) {\n            this.leftIndex = 0;\n            this.rightIndex = 2;\n        } else {\n            this.leftIndex = 1;\n            this.rightIndex = 0;\n        }\n    },\n    start() {\n\n    },\n\n    // update (dt) {\n\n    // },\n});"]}