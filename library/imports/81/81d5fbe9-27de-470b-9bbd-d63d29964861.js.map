{"version":3,"sources":["../../../../assets/Script/assets/Script/playing.js"],"names":["PokerObj","require","pokerTypes","PlayerType","cc","Enum","left","right","player","dipai","shoupai","Class","extends","Component","properties","poker","Prefab","allPokers","playerPokers","dipaiPokers","leftPokersOut","rightPokersOut","playerPokersOut","pokerSpriteFrameMap","default","visible","resultLabel","Label","leftReady","rightReady","playerReady","maskBackground","Node","startBtn","Button","leftCount","leftbuchu","leftShowPoker","rightCount","rightShowPoker","rightbuchu","playerbuchu","playerHandCards","playerOutCards","playerAction","playerDizhuAction","dipaiShowPoker","leftTip","rightTip","playerTip","leftIsDizhu","rightIsDizhu","playerIsDizhu","onLoad","socketAction","loadRes","setIndex","leaveRoom","Network","socket","emit","Global","roomNum","roomIndex","initNetwork","self","console","log","socketOn","loader","SpriteAtlas","err","assets","sflist","getSpriteFrames","i","length","sf","_name","startPoker","string","shuffleArray","array","j","Math","random","temp","restartGame","playerHandCardsShow","getComponent","desTroyPokers","Array","out","testBtn","startShowPokers","cards","playerType","pokerDatas","pokers","loadAllPoker","pokerSprite","bubbleSortCards","showCards","startPlayer","refreshCount","startDipai","type","showPoker","showPokers","originCards","instantiate","Poker","pokerName","creatCard","_imageName","Sprite","spriteFrame","push","leftIndex","rightIndex","setTip","index","active","on","errorMes","alert","playerIndex","msg","data","parseJson","qiangdizhu","qiangdizhuResult","str","isFirst","nextIndex","dizhuNode","setFirst","dizhuIndex","pokerAllDown","mes","lastPokerType","actionNode","setBuchu","blank","pokerSprites","lastPokers","onGameover","datas","selectPokers","start"],"mappings":"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","file":"playing.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\nvar PokerObj = require(\"Poker\");\nvar pokerTypes = require('pokerTypes');\nvar PlayerType = cc.Enum({\n    left: 0,\n    right: -1,\n    player: -1,\n    dipai: -1,\n    shoupai: -1\n})\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        poker: cc.Prefab, //扑克\n\n        allPokers: [], //所有牌\n        // leftPokers: [], //左边牌\n        // rightPokers: [], //右边牌\n        playerPokers: [], //玩家牌\n        dipaiPokers: [], //底牌\n        leftPokersOut: [], //左边打出牌\n        rightPokersOut: [], //右边打出牌\n        playerPokersOut: [], //玩家打出牌\n        pokerSpriteFrameMap: {\n            default: {},\n            visible: false,\n        },\n        resultLabel: cc.Label, //结果文字\n\n        leftReady: cc.Label, //左边准备\n        rightReady: cc.Label, //右边准备\n        playerReady: cc.Label, //玩家准备\n        //控制的东西\n        maskBackground: cc.Node, //开始前的遮罩\n        startBtn: cc.Button, //开始按钮\n        leftCount: cc.Label, //左边数量\n        leftbuchu: cc.Label, //左边不出\n        leftShowPoker: cc.Node, //左边展示Poker\n        rightCount: cc.Label, //右边数量\n        rightShowPoker: cc.Node, //右边展示Poker\n        rightbuchu: cc.Label, //右边不出\n\n        playerbuchu: cc.Label, //玩家不出或不抢\n\n        playerHandCards: cc.Node, //玩家手牌\n        playerOutCards: cc.Node, //玩家出牌\n        playerAction: cc.Node, //玩家按钮\n        playerDizhuAction: cc.Node, //玩家按钮\n\n        dipaiShowPoker: cc.Node, //右边展示Poker\n\n        leftTip: cc.Node, //左边手牌了\n        rightTip: cc.Node, //右边出牌了\n        playerTip: cc.Node, //玩家出牌了\n        //谁是地主\n        leftIsDizhu: cc.Node,\n        rightIsDizhu: cc.Node,\n        playerIsDizhu: cc.Node,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n\n        this.socketAction();\n        this.loadRes();\n        this.setIndex();\n    },\n    /**\n     * 离开房间\n     */\n    leaveRoom() {\n        Network.socket.emit('leaveRoom', Global.roomNum, Global.roomIndex);\n    },\n    /**\n     * socket处理\n     */\n    socketAction() {\n        if (Network.socket == null) {\n            //启动网络\n            Network.initNetwork();\n        }\n        let self = this;\n        // Network.socket.on('hello', function (msg) {\n        //     console.log(msg);\n        // });\n        console.log(Global.roomNum)\n        //准备开始\n        this.socketOn();\n\n    },\n    //加载卡片资源\n    loadRes() {\n\n        let self = this;\n        cc.loader.loadRes('poker', cc.SpriteAtlas, function (err, assets) {\n            console.log('====' + assets);\n\n            let sflist = assets.getSpriteFrames();\n            for (let i = 0; i < sflist.length; i++) {\n                let sf = sflist[i];\n                self.pokerSpriteFrameMap[sf._name] = sf;\n            }\n            console.log(\"获取完全部Poker\")\n        });\n\n    },\n    //测试获取Poker\n    startPoker() {\n        if (this.playerReady.string == \"已准备\") {\n            this.playerReady.string = \"请准备\"\n        } else {\n            this.playerReady.string = \"已准备\"\n        }\n\n\n        Network.socket.emit('readyGame', Global.roomNum, Global.roomIndex);\n\n    },\n    //洗牌算法\n    shuffleArray(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            // 在正数的时候相当于Math.floor()向下取整,负数的时候相当于Math.ceil()：\n            var j = (Math.random() * (i + 1)) | 0;\n            // console.log(j);\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    },\n    /**\n     * 重新发牌开始\n     */\n    restartGame() {\n\n        //清空页面的一些东西\n        let playerHandCardsShow = this.playerHandCards.getComponent('ShowPoker');\n        playerHandCardsShow.desTroyPokers(new Array());\n\n        let out = this.playerOutCards.getComponent('ShowPoker');\n        out.desTroyPokers(new Array());\n\n        let dipai = this.dipaiShowPoker.getComponent('ShowPoker');\n        dipai.desTroyPokers(new Array());\n\n        let left = this.leftShowPoker.getComponent('ShowPoker');\n        left.desTroyPokers(new Array());\n\n        let right = this.rightShowPoker.getComponent('ShowPoker');\n        right.desTroyPokers(new Array());\n    },\n    testBtn() {\n        Network.socket.emit('restarGame', Global.roomNum, Global.roomIndex);\n    },\n    /**\n     * 显示poker\n     * @param {数字Poker} cards \n     * @param {展示位置} playerType \n     */\n    startShowPokers(cards, playerType) {\n\n        var pokerDatas = [];\n        var pokers = this.loadAllPoker(cards);\n        for (let i = 0; i < cards.length; i++) {\n            let pokerSprite = pokers[i];\n            pokerDatas[i] = pokerSprite;\n        }\n        //左边\n        if (playerType == PlayerType.left) {\n            this.leftPokersOut = pokerDatas;\n            pokerTypes.bubbleSortCards(this.leftPokersOut);\n        } else if (playerType == PlayerType.right) {\n            this.rightPokersOut = pokerDatas;\n            pokerTypes.bubbleSortCards(this.rightPokersOut);\n        } else if (playerType == PlayerType.shoupai) {\n            this.playerPokersOut = pokerDatas;\n            pokerTypes.bubbleSortCards(this.playerPokersOut);\n        }\n        this.showCards(playerType);\n\n    },\n    //生成当前玩家\n    startPlayer(cards) {\n        this.playerPokers = [];\n        var pokers = this.loadAllPoker(cards);\n        for (let i = 0; i < cards.length; i++) {\n            let pokerSprite = pokers[i];\n            this.playerPokers[i] = pokerSprite;\n        }\n        pokerTypes.bubbleSortCards(this.playerPokers);\n        this.showCards(PlayerType.player);\n        //刷新数量\n        this.refreshCount();\n    },\n    //生成三张底牌\n    startDipai(cards) {\n        this.dipaiPokers = [];\n        var pokers = this.loadAllPoker(cards);\n        for (let i = 0; i < cards.length; i++) {\n            let pokerSprite = pokers[i];\n            this.dipaiPokers[i] = pokerSprite;\n        }\n        this.showCards(PlayerType.dipai);\n        // this.showPokers(this.dipaiPokers, PlayerType.dipai);\n    },\n    //调用子类的展示方法\n    showCards(type) {\n        if (type == PlayerType.left) {\n            var showPoker = this.leftShowPoker.getComponent('ShowPoker');\n            showPoker.showPokers(this.leftPokersOut, PlayerType.left);\n        } else if (type == PlayerType.right) {\n            var showPoker = this.rightShowPoker.getComponent('ShowPoker');\n            showPoker.showPokers(this.rightPokersOut, PlayerType.right);\n        } else if (type == PlayerType.player) {\n            var showPoker = this.playerHandCards.getComponent('ShowPoker');\n            showPoker.showPokers(this.playerPokers, PlayerType.player);\n        } else if (type == PlayerType.shoupai) {\n            //打出的牌\n            var showPoker = this.playerOutCards.getComponent('ShowPoker');\n            showPoker.showPokers(this.playerPokersOut, PlayerType.shoupai);\n        } else {\n            var showPoker = this.dipaiShowPoker.getComponent('ShowPoker');\n            showPoker.showPokers(this.dipaiPokers, PlayerType.dipai);\n        }\n    },\n\n    loadAllPoker(originCards) {\n\n        var pokers = [];\n        for (let i = 0; i < originCards.length; i++) {\n\n            let pokerSprite = cc.instantiate(this.poker);\n            var Poker = pokerSprite.getComponent('Poker');\n            var pokerName = Poker.creatCard(originCards[i])._imageName;\n            // console.log(\"名称\" + pokerName);\n            pokerSprite.getComponent(cc.Sprite).spriteFrame = this.pokerSpriteFrameMap[pokerName];\n\n            pokers.push(pokerSprite);\n        }\n        return pokers;\n    },\n\n    //刷新显示数量\n    refreshCount() {\n        var self = this;\n        Network.socket.emit('refreshCardsCount', Global.roomNum);\n\n    },\n    //设置Index\n    setIndex() {\n        if (Global.roomIndex == 0) {\n            this.leftIndex = 2;\n            this.rightIndex = 1;\n        } else if (Global.roomIndex == 1) {\n            this.leftIndex = 0;\n            this.rightIndex = 2;\n        } else {\n            this.leftIndex = 1;\n            this.rightIndex = 0;\n        }\n    },\n    //设置提示的显示\n    setTip(index) {\n        this.leftTip.active = (index == this.leftIndex);\n        this.rightTip.active = (index == this.rightIndex);\n        this.playerTip.active = (index == Global.roomIndex);\n    },\n    /**\n     * socket接收处理\n     */\n    socketOn() {\n        var self = this;\n        Network.socket.on(\"readyGame\" + Global.roomNum, function (roomIndex) {\n            if (roomIndex == self.leftIndex) {\n                self.leftReady.string = \"准备\";\n            } else if (roomIndex == self.rightIndex) {\n                self.rightReady.string = \"准备\";\n            } else {\n\n            }\n        });\n        //错误信息\n        Network.socket.on('errorPlay', function (errorMes) {\n            alert(errorMes);\n        });\n        //获取所有Poker\n        Network.socket.on('startGame' + Global.roomNum, function (playerIndex) {\n            self.restartGame();\n            //隐藏控件\n            self.maskBackground.active = false;\n\n            self.leftbuchu.string = \"\";\n\n            self.rightbuchu.string = \"\";\n\n            self.playerbuchu.string = \"\";\n\n            self.playerAction.active = false;\n\n            self.playerDizhuAction.active = false;\n            //地主标志\n            self.leftIsDizhu.active = false;\n            self.rightIsDizhu.active = false;\n            self.playerIsDizhu.active = false;\n\n\n            if (playerIndex == Global.roomIndex) {\n\n                self.playerDizhuAction.active = true;\n            }\n            //当前操作对象\n            self.setTip(playerIndex);\n\n            Network.socket.emit('getCards', Global.roomNum, Global.roomIndex);\n\n        });\n        Network.socket.on('getCardsBack' + Global.roomNum, function (cards) {\n            console.log(cards);\n            self.startPlayer(cards);\n        });\n        Network.socket.on('getDipaiCardsBack' + Global.roomNum, function (cards) {\n            console.log(cards);\n            self.startDipai(cards);\n        });\n        //有人抢地主\n        Network.socket.on('qiangdizhuResult', function (msg) {\n\n            console.log(msg);\n            let data = Network.parseJson(msg);\n            let playerIndex = data.index;\n            let qiangdizhu = data.qiangdizhuResult;\n            let str = data.str;\n\n            if (playerIndex == self.leftIndex) {\n                self.leftbuchu.string = str;\n            } else if (playerIndex == self.rightIndex) {\n                self.rightbuchu.string = str;\n            } else {\n                self.playerbuchu.string = str;\n            }\n\n        });\n        //目前抢地主用户\n        Network.socket.on('qiangdizhuNotice', function (msg) {\n            let data = Network.parseJson(msg);\n            let isFirst = data.isFirst;\n            //当前操作对象\n            self.setTip(data.nextIndex);\n\n            if (data.nextIndex == Global.roomIndex) {\n                self.playerDizhuAction.active = true;\n                self.playerbuchu.string = \"\";\n            } else {\n                self.playerDizhuAction.active = false;\n            }\n            //叫地主和抢地主\n            if (isFirst) {\n                let dizhuNode = self.playerDizhuAction.getComponent('playerDizhuAction');\n                dizhuNode.setFirst(true);\n            } else {\n                let dizhuNode = self.playerDizhuAction.getComponent('playerDizhuAction');\n                dizhuNode.setFirst(false);\n            }\n\n        });\n        //开始出牌\n        Network.socket.on('startPlayerPoker', function (playerIndex) {\n            console.log(\"地主为:\" + playerIndex);\n            //存储地主人员\n            Global.dizhuIndex = playerIndex;\n\n            self.playerDizhuAction.active = false;\n            self.leftbuchu.string = \"\";\n            self.rightbuchu.string = \"\";\n            self.playerbuchu.string = \"\";\n            //当前操作对象\n            self.setTip(playerIndex);\n            //展示底牌\n            Network.socket.emit('getCards', Global.roomNum, 3);\n            if (playerIndex == self.leftIndex) {\n                //地主标志\n                self.leftIsDizhu.active = true;\n                self.leftbuchu.string = \"出牌\";\n                self.refreshCount()\n\n            } else if (playerIndex == self.rightIndex) {\n                self.rightIsDizhu.active = true;\n                self.rightbuchu.string = \"出牌\";\n                self.refreshCount()\n\n            } else {\n                self.playerIsDizhu.active = true;\n                self.playerAction.active = true;\n                Network.socket.emit('getCards', Global.roomNum, Global.roomIndex);\n                //重置poker\n                var showPoker = self.playerHandCards.getComponent('ShowPoker');\n                showPoker.pokerAllDown();\n            }\n        });\n\n        Network.socket.on('playerAction', function (mes) {\n            let data = Network.parseJson(mes);\n\n            let playerIndex = data.nextIndex;\n            let isFirst = data.isFirst;\n            Global.isFirst = isFirst;\n            Global.lastPokerType = data.lastPokerType;\n\n            let actionNode = self.playerAction.getComponent('playerAction');\n            actionNode.setBuchu(isFirst);\n\n            //当前操作对象\n            self.setTip(playerIndex);\n            if (playerIndex == Global.roomIndex) {\n                self.playerbuchu.string = \"\";\n                self.playerAction.active = true;\n                let blank = new Array();\n                self.startShowPokers(blank, PlayerType.shoupai);\n            }\n\n            // self.restartGame();\n\n        });\n        //不出\n        Network.socket.on('buchu', function (playerIndex) {\n            let blank = new Array();\n            if (playerIndex == self.leftIndex) {\n                self.leftbuchu.string = \"不出\";\n\n                self.startShowPokers(blank, PlayerType.left);\n            } else if (playerIndex == self.rightIndex) {\n                self.rightbuchu.string = \"不出\";\n                self.startShowPokers(blank, PlayerType.right);\n            } else {\n                self.playerAction.active = false;\n                self.playerbuchu.string = \"不出\"\n                self.startShowPokers(blank, PlayerType.shoupai);\n                //重置poker\n                var showPoker = self.playerHandCards.getComponent('ShowPoker');\n                showPoker.pokerAllDown();\n            }\n        });\n        //出牌\n        Network.socket.on('chupai', function (mes) {\n            let data = Network.parseJson(mes);\n            let playerIndex = data.playerIndex;\n            let pokers = data.pokers;\n\n            //存储上一手牌\n            var pokerSprites = self.loadAllPoker(pokers);\n            Global.lastPokers = pokerSprites;\n\n            if (playerIndex == self.leftIndex) {\n                self.leftbuchu.string = \"\";\n                self.refreshCount()\n                //出的牌\n                self.startShowPokers(pokers, PlayerType.left);\n            } else if (playerIndex == self.rightIndex) {\n                self.rightbuchu.string = \"\";\n                self.refreshCount()\n                //出的牌\n                self.startShowPokers(pokers, PlayerType.right);\n            } else {\n                self.playerAction.active = false;\n                //手牌\n                Network.socket.emit('getCards', Global.roomNum, Global.roomIndex);\n                //出的牌\n                self.startShowPokers(pokers, PlayerType.shoupai);\n                //重置poker\n                var showPoker = self.playerHandCards.getComponent('ShowPoker');\n                showPoker.pokerAllDown();\n            }\n        });\n        Network.socket.on('gameOver', function (playerIndex) {\n            if (playerIndex == Global.dizhuIndex) {\n                console.log(\"地主胜利\")\n                //我是地主\n                if (Global.dizhuIndex == Global.roomIndex) {\n                    console.log(\"我赢了\")\n                    self.resultLabel.string = \"地主胜利--You Win\";\n                } else {\n                    console.log(\"我输了\")\n                    self.resultLabel.string = \"地主胜利--You Lose\";\n                }\n            } else {\n                console.log(\"农民胜利\")\n                //我是地主\n                if (Global.dizhuIndex == Global.roomIndex) {\n                    console.log(\"我输了\")\n                    self.resultLabel.string = \"农名胜利--You Lose\";\n                } else {\n                    console.log(\"我赢了\")\n                    self.resultLabel.string = \"农名胜利--You Win\";\n                }\n            }\n            self.onGameover();\n        });\n        Network.socket.on('refreshCardsCountBack' + Global.roomNum, function (datas) {\n            console.log(datas);\n            self.leftCount.string = \"\" + datas[self.leftIndex];\n            self.rightCount.string = \"\" + datas[self.rightIndex];\n        });\n        // Network.socket.on('leaveRoom' , function (playerIndex) {\n        //     if (Global) {\n\n        //     }\n        // });\n    },\n    onGameover() {\n        let self = this;\n        //清空数据\n        Global.allPokers = []  //所有牌\n        Global.selectPokers = []    //选择的牌\n        Global.isFirst = true       //是否为第一手牌\n        Global.lastPokerType = 14\n        Global.lastPokers = []\n        Global.dizhuIndex = -1 //地主是谁\ndebugger;\n        self.maskBackground.active = true;\n        self.rightReady.string = \"准备\";\n        self.leftReady.string = \"准备\";\n        self.playerReady.string = \"请准备\"\n    },\n    start() {\n\n    },\n\n    // update (dt) {\n\n    // },\n});"]}