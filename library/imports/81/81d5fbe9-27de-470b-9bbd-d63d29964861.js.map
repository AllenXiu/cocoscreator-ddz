{"version":3,"sources":["../../../../assets/Script/assets/Script/playing.js"],"names":["PokerObj","require","PlayerType","cc","Enum","left","right","player","dipai","shoupai","Class","extends","Component","properties","poker","Prefab","allPokers","playerPokers","dipaiPokers","leftPokersOut","rightPokersOut","playerPokersOut","pokerSpriteFrameMap","default","visible","leftReady","Label","rightReady","playerReady","maskBackground","Node","startBtn","Button","leftCount","leftbuchu","leftShowPoker","rightCount","rightShowPoker","rightbuchu","playerbuchu","playerHandCards","playerOutCards","playerAction","playerDizhuAction","dipaiShowPoker","leftTip","rightTip","playerTip","onLoad","socketAction","loadRes","setIndex","Network","socket","initNetwork","self","console","log","Global","roomNum","on","roomIndex","leftIndex","string","rightIndex","loader","SpriteAtlas","err","assets","sflist","getSpriteFrames","i","length","sf","_name","startPoker","emit","playerIndex","restartGame","active","setTip","cards","startPlayer","startDipai","msg","data","parseJson","index","qiangdizhu","qiangdizhuResult","isFirst","nextIndex","dizhuNode","getComponent","setFirst","refreshCount","mes","pokers","startShowPokers","shuffleArray","array","j","Math","random","temp","playerHandCardsShow","desTroyPokers","Array","playerType","pokerDatas","loadAllPoker","pokerSprite","bubbleSortCards","showCards","type","showPoker","showPokers","originCards","instantiate","Poker","pokerName","creatCard","_imageName","Sprite","spriteFrame","push","size","pokerSpriteOne","PokerOne","pokerSpriteTwo","PokerTwo","gradeOne","_grade","gradeTwo","isExchange","type1","_bigType","type2","CardBigType","HEI_TAO","HONG_TAO","MEI_HUA","FANG_KUAI","datas","start"],"mappings":"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","file":"playing.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/class/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\nvar PokerObj = require(\"Poker\");\n\nvar PlayerType = cc.Enum({\n    left: 0,\n    right: -1,\n    player: -1,\n    dipai: -1,\n    shoupai: -1\n})\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        poker: cc.Prefab, //扑克\n        allPokers: [], //所有牌\n        // leftPokers: [], //左边牌\n        // rightPokers: [], //右边牌\n        playerPokers: [], //玩家牌\n        dipaiPokers: [], //底牌\n        leftPokersOut: [], //左边打出牌\n        rightPokersOut: [], //右边打出牌\n        playerPokersOut: [], //玩家打出牌\n        pokerSpriteFrameMap: {\n            default: {},\n            visible: false,\n        },\n        leftReady: cc.Label, //左边准备\n        rightReady: cc.Label, //右边准备\n        playerReady: cc.Label, //玩家准备\n        //控制的东西\n        maskBackground: cc.Node, //开始前的遮罩\n        startBtn: cc.Button, //开始按钮\n        leftCount: cc.Label, //左边数量\n        leftbuchu: cc.Label, //左边不出\n        leftShowPoker: cc.Node, //左边展示Poker\n        rightCount: cc.Label, //右边数量\n        rightShowPoker: cc.Node, //右边展示Poker\n        rightbuchu: cc.Label, //右边不出\n        \n        playerbuchu: cc.Label, //玩家不出或不抢\n\n        playerHandCards: cc.Node, //玩家手牌\n        playerOutCards: cc.Node, //玩家出牌\n        playerAction: cc.Node, //玩家按钮\n        playerDizhuAction: cc.Node, //玩家按钮\n\n        dipaiShowPoker: cc.Node, //右边展示Poker\n\n        leftTip: cc.Node, //左边手牌了\n        rightTip: cc.Node, //右边出牌了\n        playerTip: cc.Node, //玩家出牌了\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        \n        this.socketAction();\n        this.loadRes();\n        this.setIndex();\n    },\n    /**\n     * socket处理\n     */\n    socketAction() {\n        if (Network.socket == null) {\n            //启动网络\n            Network.initNetwork();\n        }\n        let self = this;\n        // Network.socket.on('hello', function (msg) {\n        //     console.log(msg);\n        // });\n        console.log(Global.roomNum)\n        //准备开始\n        \n        Network.socket.on(\"readyGame\"+Global.roomNum, function (roomIndex) {\n            if (roomIndex == self.leftIndex) {\n                self.leftReady.string = \"准备\";\n            } else if (roomIndex == self.rightIndex) {\n                self.rightReady.string = \"准备\";\n            } else {\n\n            }\n        });\n        \n\n    },\n    //加载卡片资源\n    loadRes() {\n\n        let self = this;\n        cc.loader.loadRes('poker', cc.SpriteAtlas, function (err, assets) {\n            console.log('====' + assets);\n\n            let sflist = assets.getSpriteFrames();\n            for (let i = 0; i < sflist.length; i++) {\n                let sf = sflist[i];\n                self.pokerSpriteFrameMap[sf._name] = sf;\n            }\n            console.log(\"获取完全部Poker\")\n        });\n\n    },\n    //测试获取Poker\n    startPoker() {\n        if (this.playerReady.string == \"已准备\") {\n            this.playerReady.string = \"请准备\"\n        } else {\n            this.playerReady.string = \"已准备\"\n        }\n        \n\n        Network.socket.emit('readyGame',  Global.roomNum,Global.roomIndex);\n        var self = this;\n        //获取所有Poker\n        Network.socket.on('startGame' + Global.roomNum, function (playerIndex) {\n            self.restartGame();\n            //隐藏控件\n            self.maskBackground.active = false;\n\n            self.leftbuchu.string = \"\";\n            \n            self.rightbuchu.string = \"\";\n\n            self.playerbuchu.string = \"\";\n\n            self.playerAction.active = false;\n            \n            self.playerDizhuAction.active = false;\n\n            if (playerIndex == Global.roomIndex) {\n\n                self.playerDizhuAction.active = true;\n            }\n            //当前操作对象\n            self.setTip(playerIndex);\n\n            Network.socket.emit('getCards' ,Global.roomNum,Global.roomIndex);\n            Network.socket.on('getCardsBack'+Global.roomNum, function(cards){\n                console.log(cards);\n                self.startPlayer(cards);\n            });\n            Network.socket.on('getDipaiCardsBack'+Global.roomNum, function(cards){\n                console.log(cards);\n                self.startDipai(cards);\n            });\n        });\n        //有人抢地主\n        Network.socket.on('qiangdizhuResult' , function (msg) {\n\n            console.log(msg);\n            let data = Network.parseJson(msg);\n            let playerIndex = data.index;\n            let qiangdizhu = data.qiangdizhuResult;\n\n            if (playerIndex == self.leftIndex) {\n                self.leftbuchu.string = qiangdizhu?\"抢地主\":\"不抢\";\n            } else if (playerIndex == self.rightIndex) {\n                self.rightbuchu.string = qiangdizhu?\"抢地主\":\"不抢\";\n            } else {\n                self.playerbuchu.string = qiangdizhu?\"抢地主\":\"不抢\";\n            }\n            \n        });\n        //目前抢地主用户\n        Network.socket.on('qiangdizhuNotice' , function (msg) {\n           let data = Network.parseJson(msg);\n            let isFirst = data.isFirst;\n            //当前操作对象\n            self.setTip(data.nextIndex);\n\n            if (data.nextIndex == Global.roomIndex) {\n                self.playerDizhuAction.active = true;\n            }else{\n                self.playerDizhuAction.active = false;\n            }\n            //叫地主和抢地主\n            if (isFirst) {\n                let dizhuNode = self.playerDizhuAction.getComponent('playerDizhuAction');\n                dizhuNode.setFirst(true);\n            }else{\n                let dizhuNode = self.playerDizhuAction.getComponent('playerDizhuAction');\n                dizhuNode.setFirst(false);\n            }\n\n        });\n        //开始出牌\n        Network.socket.on('startPlayerPoker' , function (playerIndex) {\n\n            self.playerDizhuAction.active = false;\n            self.leftbuchu.string = \"\";\n            self.rightbuchu.string = \"\";\n            self.playerbuchu.string = \"\";\n            //当前操作对象\n            self.setTip(playerIndex);\n            //展示底牌\n            Network.socket.emit('getCards' ,Global.roomNum,3);\n            if (playerIndex == self.leftIndex) {\n                self.leftbuchu.string = \"出牌\";\n                self.refreshCount()\n            } else if (playerIndex == self.rightIndex) {\n                self.rightbuchu.string = \"出牌\";\n                self.refreshCount()\n            } else {\n                self.playerAction.active = true;\n                Network.socket.emit('getCards' ,Global.roomNum,Global.roomIndex);\n            }\n        });\n        Network.socket.on('buchu' , function (playerIndex) {\n            debugger\n        });\n        Network.socket.on('chupai' , function (mes) {\n            let data = Network.parseJson(mes);\n            let playerIndex = data.playerIndex;\n            let pokers = data.pokers;\n\n            if (playerIndex == self.leftIndex) {\n                self.leftbuchu.string = \"\";\n                self.refreshCount()\n                //出的牌\n                self.startShowPokers(pokers,PlayerType.left);\n            } else if (playerIndex == self.rightIndex) {\n                self.rightbuchu.string = \"\";\n                self.refreshCount()\n                //出的牌\n                self.startShowPokers(pokers,PlayerType.right);\n            } else {\n                self.playerAction.active = false;\n                //手牌\n                Network.socket.emit('getCards' ,Global.roomNum,Global.roomIndex);\n                //出的牌\n                self.startShowPokers(pokers,PlayerType.shoupai);\n            }\n        });\n    },\n    //洗牌算法\n    shuffleArray(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            // 在正数的时候相当于Math.floor()向下取整,负数的时候相当于Math.ceil()：\n            var j = (Math.random() * (i + 1)) | 0;\n            // console.log(j);\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    },\n    /**\n     * 重新发牌开始\n     */\n    restartGame(){\n        let playerHandCardsShow =  this.playerHandCards.getComponent('ShowPoker');\n        playerHandCardsShow.desTroyPokers(new Array());\n        \n        let dipai = this.dipaiShowPoker.getComponent('ShowPoker');\n        dipai.desTroyPokers(new Array());\n\n    },\n    /**\n     * \n     * @param {数字Poker} cards \n     * @param {展示位置} playerType \n     */\n    startShowPokers(cards,playerType){\n        \n        var pokerDatas = [];\n        var pokers = this.loadAllPoker(cards);\n        for (let i = 0; i < cards.length; i++) {\n            let pokerSprite = pokers[i];\n            pokerDatas[i] = pokerSprite;\n        }\n        //左边\n        if (playerType == PlayerType.left) {\n            this.leftPokersOut = pokerDatas;\n            this.bubbleSortCards(this.leftPokersOut);\n        }else if (playerType == PlayerType.right) {\n            this.rightPokersOut = pokerDatas;\n            this.bubbleSortCards(this.rightPokersOut);\n        }else if (playerType == PlayerType.shoupai) {\n            this.playerPokersOut = pokerDatas;\n            this.bubbleSortCards(this.playerPokersOut);\n        }\n        this.showCards(playerType);\n        \n    },\n    //生成当前玩家\n    startPlayer(cards) {\n        this.playerPokers = [];\n        var pokers = this.loadAllPoker(cards);\n        for (let i = 0; i < cards.length; i++) {\n            let pokerSprite = pokers[i];\n            this.playerPokers[i] = pokerSprite;\n        }\n        this.bubbleSortCards(this.playerPokers);\n        this.showCards(PlayerType.player);\n        //刷新数量\n        this.refreshCount();\n    },\n    //生成三张底牌\n    startDipai(cards) {\n        this.dipaiPokers = [];\n        var pokers = this.loadAllPoker(cards);\n        for (let i = 0; i < cards.length; i++) {\n            let pokerSprite = pokers[i];\n            this.dipaiPokers[i] = pokerSprite;\n        }\n        this.showCards(PlayerType.dipai);\n        // this.showPokers(this.dipaiPokers, PlayerType.dipai);\n    },\n    showCards(type) {\n        if (type == PlayerType.left) {\n            var showPoker = this.leftShowPoker.getComponent('ShowPoker');\n            showPoker.showPokers(this.leftPokersOut, PlayerType.left);\n        } else if (type == PlayerType.right) {\n            var showPoker = this.rightShowPoker.getComponent('ShowPoker');\n            showPoker.showPokers(this.rightPokersOut, PlayerType.right);\n        } else if (type == PlayerType.player) {\n            var showPoker = this.playerHandCards.getComponent('ShowPoker');\n            showPoker.showPokers(this.playerPokers, PlayerType.player);\n        } else if (type == PlayerType.shoupai) {\n            //打出的牌\n            var showPoker = this.playerOutCards.getComponent('ShowPoker');\n            showPoker.showPokers(this.playerPokersOut, PlayerType.shoupai);\n        } else {\n            var showPoker = this.dipaiShowPoker.getComponent('ShowPoker');\n            showPoker.showPokers(this.dipaiPokers, PlayerType.dipai);\n        }\n    },\n\n    loadAllPoker(originCards) {\n\n        var pokers = [];\n        for (let i = 0; i < originCards.length; i++) {\n\n            let pokerSprite = cc.instantiate(this.poker);\n            var Poker = pokerSprite.getComponent('Poker');\n            var pokerName = Poker.creatCard(originCards[i])._imageName;\n            // console.log(\"名称\" + pokerName);\n            pokerSprite.getComponent(cc.Sprite).spriteFrame = this.pokerSpriteFrameMap[pokerName];\n\n            pokers.push(pokerSprite);\n        }\n        return pokers;\n    },\n    /** \n     * 对牌进行排序，从小到大，使用冒泡排序，此种方法不是很好 \n     * \n     * @param cards \n     *            牌 \n     */\n    bubbleSortCards(cards) {\n        if (cards == null) {\n            return cards;\n        }\n        let size = cards.length;\n        // 冒泡排序,从左到右，从小到大  \n        for (var i = 0; i < size; i++) {\n            for (var j = 0; j < size - 1 - i; j++) {\n                let pokerSpriteOne = cards[j];\n                let PokerOne = pokerSpriteOne.getComponent('Poker');\n                let pokerSpriteTwo = cards[j + 1];\n                let PokerTwo = pokerSpriteTwo.getComponent('Poker');\n\n                var gradeOne = PokerOne._grade;\n                var gradeTwo = PokerTwo._grade;\n\n                var isExchange = false;\n                if (gradeOne < gradeTwo) {\n                    isExchange = true;\n                } else if (gradeOne == gradeTwo) {\n                    // 2张牌的grade相同  \n                    var type1 = PokerOne._bigType;\n                    var type2 = PokerTwo._bigType;\n\n                    // 从左到右，方块、梅花、红桃、黑桃  \n                    if (type1 == PokerObj.CardBigType.HEI_TAO) {\n                        isExchange = true;\n                    } else if (type1 == PokerObj.CardBigType.HONG_TAO) {\n                        if (type2 == PokerObj.CardBigType.MEI_HUA ||\n                            type2 == PokerObj.CardBigType.FANG_KUAI) {\n                            isExchange = true;\n                        }\n                    } else if (type1 == PokerObj.CardBigType.MEI_HUA) {\n                        if (type2 == PokerObj.CardBigType.FANG_KUAI) {\n                            isExchange = true;\n                        }\n                    }\n                }\n                if (isExchange) {\n                    cards[j + 1] = pokerSpriteOne;\n                    cards[j] = pokerSpriteTwo;\n                }\n            }\n        }\n        // console.log(\"我的牌\"+ cards);\n        return cards;\n    },\n    //刷新显示数量\n    refreshCount() {\n        var self = this;\n        Network.socket.emit('refreshCardsCount' ,Global.roomNum);\n        Network.socket.on('refreshCardsCountBack'+Global.roomNum, function(datas){\n                console.log(datas);\n                self.leftCount.string = \"\" + datas[self.leftIndex];\n                self.rightCount.string = \"\" + datas[self.rightIndex];\n        });\n\n    },\n    //设置Index\n    setIndex() {\n        if (Global.roomIndex == 0) {\n            this.leftIndex = 2;\n            this.rightIndex = 1;\n        } else if (Global.roomIndex == 1) {\n            this.leftIndex = 0;\n            this.rightIndex = 2;\n        } else {\n            this.leftIndex = 1;\n            this.rightIndex = 0;\n        }\n    },\n    //设置提示的显示\n    setTip(index){\n        this.leftTip.active = (index == this.leftIndex);\n        this.rightTip.active = (index == this.rightIndex);\n        this.playerTip.active = (index == Global.roomIndex);\n    },\n\n    start() {\n\n    },\n\n    // update (dt) {\n\n    // },\n});"]}